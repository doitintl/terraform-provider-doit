// Package onlymodels provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package models

import (
	"encoding/json"
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes         = "api_key.Scopes"
	CustomerContextScopes = "customerContext.Scopes"
)

// Defines values for AlertConfigTimeInterval.
const (
	AlertConfigTimeIntervalDay     AlertConfigTimeInterval = "day"
	AlertConfigTimeIntervalHour    AlertConfigTimeInterval = "hour"
	AlertConfigTimeIntervalMonth   AlertConfigTimeInterval = "month"
	AlertConfigTimeIntervalQuarter AlertConfigTimeInterval = "quarter"
	AlertConfigTimeIntervalWeek    AlertConfigTimeInterval = "week"
	AlertConfigTimeIntervalYear    AlertConfigTimeInterval = "year"
)

// Defines values for AllocationComponentMode.
const (
	Contains   AllocationComponentMode = "contains"
	EndsWith   AllocationComponentMode = "ends_with"
	Is         AllocationComponentMode = "is"
	Regexp     AllocationComponentMode = "regexp"
	StartsWith AllocationComponentMode = "starts_with"
)

// Defines values for AllocationDeleteValidationType.
const (
	AllocationDeleteValidationTypeGroup  AllocationDeleteValidationType = "group"
	AllocationDeleteValidationTypeSingle AllocationDeleteValidationType = "single"
)

// Defines values for AllocationListItemAllocationType.
const (
	AllocationListItemAllocationTypeGroup  AllocationListItemAllocationType = "group"
	AllocationListItemAllocationTypeSingle AllocationListItemAllocationType = "single"
)

// Defines values for AnomalyItemStatus.
const (
	AnomalyItemStatusActive   AnomalyItemStatus = "active"
	AnomalyItemStatusInactive AnomalyItemStatus = "inactive"
)

// Defines values for BudgetPublic.
const (
	BudgetPublicEditor BudgetPublic = "editor"
	BudgetPublicOwner  BudgetPublic = "owner"
	BudgetPublicViewer BudgetPublic = "viewer"
)

// Defines values for BudgetAPIPublic.
const (
	BudgetAPIPublicEditor BudgetAPIPublic = "editor"
	BudgetAPIPublicOwner  BudgetAPIPublic = "owner"
	BudgetAPIPublicViewer BudgetAPIPublic = "viewer"
)

// Defines values for BudgetCreateUpdateRequestPublic.
const (
	BudgetCreateUpdateRequestPublicEditor BudgetCreateUpdateRequestPublic = "editor"
	BudgetCreateUpdateRequestPublicOwner  BudgetCreateUpdateRequestPublic = "owner"
	BudgetCreateUpdateRequestPublicViewer BudgetCreateUpdateRequestPublic = "viewer"
)

// Defines values for CloudIncidentListItemPlatform.
const (
	CloudIncidentListItemPlatformAmazonWebServices CloudIncidentListItemPlatform = "amazon-web-services"
	CloudIncidentListItemPlatformGoogleCloud       CloudIncidentListItemPlatform = "google-cloud"
	CloudIncidentListItemPlatformMicrosoftAzure    CloudIncidentListItemPlatform = "microsoft-azure"
)

// Defines values for CloudIncidentListItemStatus.
const (
	CloudIncidentListItemStatusActive   CloudIncidentListItemStatus = "active"
	CloudIncidentListItemStatusArchived CloudIncidentListItemStatus = "archived"
)

// Defines values for CollaboratorRole.
const (
	CollaboratorRoleEditor CollaboratorRole = "editor"
	CollaboratorRoleOwner  CollaboratorRole = "owner"
	CollaboratorRoleViewer CollaboratorRole = "viewer"
)

// Defines values for Currency.
const (
	AED Currency = "AED"
	AUD Currency = "AUD"
	BRL Currency = "BRL"
	CAD Currency = "CAD"
	CHF Currency = "CHF"
	COP Currency = "COP"
	DKK Currency = "DKK"
	EGP Currency = "EGP"
	EUR Currency = "EUR"
	GBP Currency = "GBP"
	IDR Currency = "IDR"
	ILS Currency = "ILS"
	JPY Currency = "JPY"
	MXN Currency = "MXN"
	MYR Currency = "MYR"
	NOK Currency = "NOK"
	SEK Currency = "SEK"
	SGD Currency = "SGD"
	THB Currency = "THB"
	TWD Currency = "TWD"
	USD Currency = "USD"
	ZAR Currency = "ZAR"
)

// Defines values for DimensionsTypes.
const (
	DimensionsTypesAttribution      DimensionsTypes = "attribution"
	DimensionsTypesAttributionGroup DimensionsTypes = "attribution_group"
	DimensionsTypesDatetime         DimensionsTypes = "datetime"
	DimensionsTypesFixed            DimensionsTypes = "fixed"
	DimensionsTypesGke              DimensionsTypes = "gke"
	DimensionsTypesGkeLabel         DimensionsTypes = "gke_label"
	DimensionsTypesLabel            DimensionsTypes = "label"
	DimensionsTypesOptional         DimensionsTypes = "optional"
	DimensionsTypesProjectLabel     DimensionsTypes = "project_label"
	DimensionsTypesSystemLabel      DimensionsTypes = "system_label"
	DimensionsTypesTag              DimensionsTypes = "tag"
)

// Defines values for ExternalConfigAggregation.
const (
	PercentCol   ExternalConfigAggregation = "percent_col"
	PercentRow   ExternalConfigAggregation = "percent_row"
	PercentTotal ExternalConfigAggregation = "percent_total"
	Total        ExternalConfigAggregation = "total"
)

// Defines values for ExternalConfigDataSource.
const (
	Billing               ExternalConfigDataSource = "billing"
	BillingDatahub        ExternalConfigDataSource = "billing_datahub"
	Bqlens                ExternalConfigDataSource = "bqlens"
	KubernetesUtilization ExternalConfigDataSource = "kubernetes_utilization"
)

// Defines values for ExternalConfigDisplayValues.
const (
	AbsoluteAndPercentage ExternalConfigDisplayValues = "absolute_and_percentage"
	AbsoluteChange        ExternalConfigDisplayValues = "absolute_change"
	ActualsOnly           ExternalConfigDisplayValues = "actuals_only"
	PercentageChange      ExternalConfigDisplayValues = "percentage_change"
)

// Defines values for ExternalConfigSortDimensions.
const (
	ExternalConfigSortDimensionsAToZ ExternalConfigSortDimensions = "a_to_z"
	ExternalConfigSortDimensionsAsc  ExternalConfigSortDimensions = "asc"
	ExternalConfigSortDimensionsDesc ExternalConfigSortDimensions = "desc"
)

// Defines values for ExternalConfigSortGroups.
const (
	ExternalConfigSortGroupsAToZ ExternalConfigSortGroups = "a_to_z"
	ExternalConfigSortGroupsAsc  ExternalConfigSortGroups = "asc"
	ExternalConfigSortGroupsDesc ExternalConfigSortGroups = "desc"
)

// Defines values for ExternalConfigTimeInterval.
const (
	ExternalConfigTimeIntervalDay       ExternalConfigTimeInterval = "day"
	ExternalConfigTimeIntervalDayCumSum ExternalConfigTimeInterval = "dayCumSum"
	ExternalConfigTimeIntervalHour      ExternalConfigTimeInterval = "hour"
	ExternalConfigTimeIntervalIsoweek   ExternalConfigTimeInterval = "isoweek"
	ExternalConfigTimeIntervalMonth     ExternalConfigTimeInterval = "month"
	ExternalConfigTimeIntervalQuarter   ExternalConfigTimeInterval = "quarter"
	ExternalConfigTimeIntervalWeek      ExternalConfigTimeInterval = "week"
	ExternalConfigTimeIntervalWeekDay   ExternalConfigTimeInterval = "week_day"
	ExternalConfigTimeIntervalYear      ExternalConfigTimeInterval = "year"
)

// Defines values for ExternalConfigFilterType.
const (
	ExternalConfigFilterTypeAttribution      ExternalConfigFilterType = "attribution"
	ExternalConfigFilterTypeAttributionGroup ExternalConfigFilterType = "attribution_group"
	ExternalConfigFilterTypeDatetime         ExternalConfigFilterType = "datetime"
	ExternalConfigFilterTypeFixed            ExternalConfigFilterType = "fixed"
	ExternalConfigFilterTypeGke              ExternalConfigFilterType = "gke"
	ExternalConfigFilterTypeGkeLabel         ExternalConfigFilterType = "gke_label"
	ExternalConfigFilterTypeLabel            ExternalConfigFilterType = "label"
	ExternalConfigFilterTypeOptional         ExternalConfigFilterType = "optional"
	ExternalConfigFilterTypeProjectLabel     ExternalConfigFilterType = "project_label"
	ExternalConfigFilterTypeSystemLabel      ExternalConfigFilterType = "system_label"
	ExternalConfigFilterTypeTag              ExternalConfigFilterType = "tag"
)

// Defines values for ExternalConfigMetricFilterOperator.
const (
	B   ExternalConfigMetricFilterOperator = "b"
	E   ExternalConfigMetricFilterOperator = "e"
	Gt  ExternalConfigMetricFilterOperator = "gt"
	Gte ExternalConfigMetricFilterOperator = "gte"
	Lt  ExternalConfigMetricFilterOperator = "lt"
	Lte ExternalConfigMetricFilterOperator = "lte"
	Nb  ExternalConfigMetricFilterOperator = "nb"
	Ne  ExternalConfigMetricFilterOperator = "ne"
)

// Defines values for ExternalMetricType.
const (
	ExternalMetricTypeBasic    ExternalMetricType = "basic"
	ExternalMetricTypeCustom   ExternalMetricType = "custom"
	ExternalMetricTypeExtended ExternalMetricType = "extended"
)

// Defines values for ExternalOriginType.
const (
	ExternalOriginTypeAttribution      ExternalOriginType = "attribution"
	ExternalOriginTypeAttributionGroup ExternalOriginType = "attribution_group"
	ExternalOriginTypeDatetime         ExternalOriginType = "datetime"
	ExternalOriginTypeFixed            ExternalOriginType = "fixed"
	ExternalOriginTypeGke              ExternalOriginType = "gke"
	ExternalOriginTypeGkeLabel         ExternalOriginType = "gke_label"
	ExternalOriginTypeLabel            ExternalOriginType = "label"
	ExternalOriginTypeOptional         ExternalOriginType = "optional"
	ExternalOriginTypeProjectLabel     ExternalOriginType = "project_label"
	ExternalOriginTypeSystemLabel      ExternalOriginType = "system_label"
	ExternalOriginTypeTag              ExternalOriginType = "tag"
	ExternalOriginTypeUnallocated      ExternalOriginType = "unallocated"
)

// Defines values for ExternalRenderer.
const (
	AreaChart          ExternalRenderer = "area_chart"
	AreaSplineChart    ExternalRenderer = "area_spline_chart"
	BarChart           ExternalRenderer = "bar_chart"
	ColumnChart        ExternalRenderer = "column_chart"
	CsvExport          ExternalRenderer = "csv_export"
	LineChart          ExternalRenderer = "line_chart"
	SheetsExport       ExternalRenderer = "sheets_export"
	SplineChart        ExternalRenderer = "spline_chart"
	StackedAreaChart   ExternalRenderer = "stacked_area_chart"
	StackedBarChart    ExternalRenderer = "stacked_bar_chart"
	StackedColumnChart ExternalRenderer = "stacked_column_chart"
	Table              ExternalRenderer = "table"
	TableColHeatmap    ExternalRenderer = "table_col_heatmap"
	TableHeatmap       ExternalRenderer = "table_heatmap"
	TableRowHeatmap    ExternalRenderer = "table_row_heatmap"
	TreemapChart       ExternalRenderer = "treemap_chart"
)

// Defines values for ExternalReportType.
const (
	ExternalReportTypeCustom  ExternalReportType = "custom"
	ExternalReportTypeManaged ExternalReportType = "managed"
	ExternalReportTypePreset  ExternalReportType = "preset"
)

// Defines values for ExternalSplitMode.
const (
	ExternalSplitModeCustom       ExternalSplitMode = "custom"
	ExternalSplitModeEven         ExternalSplitMode = "even"
	ExternalSplitModeProportional ExternalSplitMode = "proportional"
)

// Defines values for ExternalSplitType.
const (
	ExternalSplitTypeAttribution      ExternalSplitType = "attribution"
	ExternalSplitTypeAttributionGroup ExternalSplitType = "attribution_group"
	ExternalSplitTypeDatetime         ExternalSplitType = "datetime"
	ExternalSplitTypeFixed            ExternalSplitType = "fixed"
	ExternalSplitTypeGke              ExternalSplitType = "gke"
	ExternalSplitTypeGkeLabel         ExternalSplitType = "gke_label"
	ExternalSplitTypeLabel            ExternalSplitType = "label"
	ExternalSplitTypeOptional         ExternalSplitType = "optional"
	ExternalSplitTypeProjectLabel     ExternalSplitType = "project_label"
	ExternalSplitTypeSystemLabel      ExternalSplitType = "system_label"
	ExternalSplitTypeTag              ExternalSplitType = "tag"
)

// Defines values for ExternalSplitTargetType.
const (
	ExternalSplitTargetTypeAttribution      ExternalSplitTargetType = "attribution"
	ExternalSplitTargetTypeAttributionGroup ExternalSplitTargetType = "attribution_group"
	ExternalSplitTargetTypeDatetime         ExternalSplitTargetType = "datetime"
	ExternalSplitTargetTypeFixed            ExternalSplitTargetType = "fixed"
	ExternalSplitTargetTypeGke              ExternalSplitTargetType = "gke"
	ExternalSplitTargetTypeGkeLabel         ExternalSplitTargetType = "gke_label"
	ExternalSplitTargetTypeLabel            ExternalSplitTargetType = "label"
	ExternalSplitTargetTypeOptional         ExternalSplitTargetType = "optional"
	ExternalSplitTargetTypeProjectLabel     ExternalSplitTargetType = "project_label"
	ExternalSplitTargetTypeSystemLabel      ExternalSplitTargetType = "system_label"
	ExternalSplitTargetTypeTag              ExternalSplitTargetType = "tag"
)

// Defines values for InvitedUserBodyStatus.
const (
	InvitedUserBodyStatusInvited InvitedUserBodyStatus = "invited"
)

// Defines values for InvoiceListItemStatus.
const (
	OPEN    InvoiceListItemStatus = "OPEN"
	PAID    InvoiceListItemStatus = "PAID"
	PASTDUE InvoiceListItemStatus = "PAST DUE"
)

// Defines values for InvoicePlatform.
const (
	InvoicePlatformAmazonWebServices InvoicePlatform = "amazon-web-services"
	InvoicePlatformGSuite            InvoicePlatform = "g-suite"
	InvoicePlatformGoogleCloud       InvoicePlatform = "google-cloud"
	InvoicePlatformLooker            InvoicePlatform = "looker"
	InvoicePlatformMicrosoftAzure    InvoicePlatform = "microsoft-azure"
	InvoicePlatformNavigator         InvoicePlatform = "navigator"
	InvoicePlatformOffice365         InvoicePlatform = "office-365"
	InvoicePlatformSolve             InvoicePlatform = "solve"
	InvoicePlatformSuperquery        InvoicePlatform = "superquery"
)

// Defines values for LimitSort.
const (
	LimitSortAToZ LimitSort = "a_to_z"
	LimitSortAsc  LimitSort = "asc"
	LimitSortDesc LimitSort = "desc"
)

// Defines values for NewAllocationResponseAllocationType.
const (
	NewAllocationResponseAllocationTypeGroup  NewAllocationResponseAllocationType = "group"
	NewAllocationResponseAllocationTypeSingle NewAllocationResponseAllocationType = "single"
)

// Defines values for ReportType.
const (
	ReportTypeCustom ReportType = "custom"
	ReportTypePreset ReportType = "preset"
)

// Defines values for ResourcePermissionRole.
const (
	ResourcePermissionRoleEditor ResourcePermissionRole = "editor"
	ResourcePermissionRoleOwner  ResourcePermissionRole = "owner"
	ResourcePermissionRoleViewer ResourcePermissionRole = "viewer"
)

// Defines values for ResourcePermissionsResponsePublic.
const (
	ResourcePermissionsResponsePublicEditor ResourcePermissionsResponsePublic = "editor"
	ResourcePermissionsResponsePublicViewer ResourcePermissionsResponsePublic = "viewer"
)

// Defines values for RunReportResultResultMlFeatures.
const (
	Decreasing RunReportResultResultMlFeatures = "decreasing"
	Forecast   RunReportResultResultMlFeatures = "forecast"
	Increasing RunReportResultResultMlFeatures = "increasing"
	None       RunReportResultResultMlFeatures = "none"
)

// Defines values for SingleAllocationAllocationType.
const (
	SingleAllocationAllocationTypeSingle SingleAllocationAllocationType = "single"
)

// Defines values for TicketExtAPIPlatform.
const (
	TicketExtAPIPlatformAmazonWebServices   TicketExtAPIPlatform = "amazon_web_services"
	TicketExtAPIPlatformDoit                TicketExtAPIPlatform = "doit"
	TicketExtAPIPlatformGoogleCloudPlatform TicketExtAPIPlatform = "google_cloud_platform"
	TicketExtAPIPlatformMicrosoftAzure      TicketExtAPIPlatform = "microsoft_azure"
)

// Defines values for TicketExtAPISeverity.
const (
	TicketExtAPISeverityHigh   TicketExtAPISeverity = "high"
	TicketExtAPISeverityLow    TicketExtAPISeverity = "low"
	TicketExtAPISeverityNormal TicketExtAPISeverity = "normal"
	TicketExtAPISeverityUrgent TicketExtAPISeverity = "urgent"
)

// Defines values for TicketListItemPlatform.
const (
	TicketListItemPlatformAmazonWebServices   TicketListItemPlatform = "amazon_web_services"
	TicketListItemPlatformDoit                TicketListItemPlatform = "doit"
	TicketListItemPlatformGoogleCloudPlatform TicketListItemPlatform = "google_cloud_platform"
	TicketListItemPlatformMicrosoftAzure      TicketListItemPlatform = "microsoft_azure"
)

// Defines values for TicketResponseExtAPIPlatform.
const (
	TicketResponseExtAPIPlatformAmazonWebServices   TicketResponseExtAPIPlatform = "amazon_web_services"
	TicketResponseExtAPIPlatformDoit                TicketResponseExtAPIPlatform = "doit"
	TicketResponseExtAPIPlatformGoogleCloudPlatform TicketResponseExtAPIPlatform = "google_cloud_platform"
	TicketResponseExtAPIPlatformMicrosoftAzure      TicketResponseExtAPIPlatform = "microsoft_azure"
)

// Defines values for TicketResponseExtAPIRequester.
const (
	TicketResponseExtAPIRequesterAmazonWebServices   TicketResponseExtAPIRequester = "amazon_web_services"
	TicketResponseExtAPIRequesterDoit                TicketResponseExtAPIRequester = "doit"
	TicketResponseExtAPIRequesterGoogleCloudPlatform TicketResponseExtAPIRequester = "google_cloud_platform"
	TicketResponseExtAPIRequesterMicrosoftAzure      TicketResponseExtAPIRequester = "microsoft_azure"
)

// Defines values for TicketResponseExtAPISeverity.
const (
	TicketResponseExtAPISeverityHigh   TicketResponseExtAPISeverity = "high"
	TicketResponseExtAPISeverityLow    TicketResponseExtAPISeverity = "low"
	TicketResponseExtAPISeverityNormal TicketResponseExtAPISeverity = "normal"
	TicketResponseExtAPISeverityUrgent TicketResponseExtAPISeverity = "urgent"
)

// Defines values for TimeSettingsMode.
const (
	Current TimeSettingsMode = "current"
	Custom  TimeSettingsMode = "custom"
	Last    TimeSettingsMode = "last"
)

// Defines values for TimeSettingsUnit.
const (
	Day     TimeSettingsUnit = "day"
	Month   TimeSettingsUnit = "month"
	Quarter TimeSettingsUnit = "quarter"
	Week    TimeSettingsUnit = "week"
	Year    TimeSettingsUnit = "year"
)

// Defines values for UpdateUserRequestJobFunction.
const (
	UpdateUserRequestJobFunctionDataEngineerDataAnalysts UpdateUserRequestJobFunction = "Data Engineer/Data Analysts"
	UpdateUserRequestJobFunctionExecutiveTeam            UpdateUserRequestJobFunction = "Executive Team"
	UpdateUserRequestJobFunctionFinanceAccounting        UpdateUserRequestJobFunction = "Finance / Accounting"
	UpdateUserRequestJobFunctionFounder                  UpdateUserRequestJobFunction = "Founder"
	UpdateUserRequestJobFunctionLegalPurchasing          UpdateUserRequestJobFunction = "Legal / Purchasing"
	UpdateUserRequestJobFunctionManagement               UpdateUserRequestJobFunction = "Management"
	UpdateUserRequestJobFunctionSalesMarketing           UpdateUserRequestJobFunction = "Sales / Marketing"
	UpdateUserRequestJobFunctionSoftwareOpsEngineer      UpdateUserRequestJobFunction = "Software / Ops Engineer"
)

// Defines values for UpdateUserRequestLanguage.
const (
	UpdateUserRequestLanguageEn UpdateUserRequestLanguage = "en"
	UpdateUserRequestLanguageJa UpdateUserRequestLanguage = "ja"
)

// Defines values for UpdatedUserBodyJobFunction.
const (
	UpdatedUserBodyJobFunctionDataEngineerDataAnalysts UpdatedUserBodyJobFunction = "Data Engineer/Data Analysts"
	UpdatedUserBodyJobFunctionExecutiveTeam            UpdatedUserBodyJobFunction = "Executive Team"
	UpdatedUserBodyJobFunctionFinanceAccounting        UpdatedUserBodyJobFunction = "Finance / Accounting"
	UpdatedUserBodyJobFunctionFounder                  UpdatedUserBodyJobFunction = "Founder"
	UpdatedUserBodyJobFunctionLegalPurchasing          UpdatedUserBodyJobFunction = "Legal / Purchasing"
	UpdatedUserBodyJobFunctionManagement               UpdatedUserBodyJobFunction = "Management"
	UpdatedUserBodyJobFunctionSalesMarketing           UpdatedUserBodyJobFunction = "Sales / Marketing"
	UpdatedUserBodyJobFunctionSoftwareOpsEngineer      UpdatedUserBodyJobFunction = "Software / Ops Engineer"
)

// Defines values for UpdatedUserBodyLanguage.
const (
	UpdatedUserBodyLanguageEn UpdatedUserBodyLanguage = "en"
	UpdatedUserBodyLanguageJa UpdatedUserBodyLanguage = "ja"
)

// Defines values for UserListItemJobFunction.
const (
	DataEngineerDataAnalysts UserListItemJobFunction = "Data Engineer/Data Analysts"
	ExecutiveTeam            UserListItemJobFunction = "Executive Team"
	FinanceAccounting        UserListItemJobFunction = "Finance / Accounting"
	Founder                  UserListItemJobFunction = "Founder"
	LegalPurchasing          UserListItemJobFunction = "Legal / Purchasing"
	Management               UserListItemJobFunction = "Management"
	SalesMarketing           UserListItemJobFunction = "Sales / Marketing"
	SoftwareOpsEngineer      UserListItemJobFunction = "Software / Ops Engineer"
)

// Defines values for UserListItemLanguage.
const (
	En UserListItemLanguage = "en"
	Ja UserListItemLanguage = "ja"
)

// Defines values for UserListItemStatus.
const (
	UserListItemStatusActive  UserListItemStatus = "active"
	UserListItemStatusInvited UserListItemStatus = "invited"
)

// Defines values for ResourceType.
const (
	ResourceTypeAlerts            ResourceType = "alerts"
	ResourceTypeAllocations       ResourceType = "allocations"
	ResourceTypeAttributiongroups ResourceType = "attributiongroups"
	ResourceTypeAttributions      ResourceType = "attributions"
	ResourceTypeBudgets           ResourceType = "budgets"
	ResourceTypeReports           ResourceType = "reports"
)

// Defines values for SortOrder.
const (
	SortOrderAsc  SortOrder = "asc"
	SortOrderDesc SortOrder = "desc"
)

// Defines values for ListAlertsParamsSortBy.
const (
	ListAlertsParamsSortByCreateTime  ListAlertsParamsSortBy = "createTime"
	ListAlertsParamsSortByLastAlerted ListAlertsParamsSortBy = "lastAlerted"
	ListAlertsParamsSortByName        ListAlertsParamsSortBy = "name"
	ListAlertsParamsSortByUpdateTime  ListAlertsParamsSortBy = "updateTime"
)

// Defines values for ListAlertsParamsSortOrder.
const (
	ListAlertsParamsSortOrderAsc  ListAlertsParamsSortOrder = "asc"
	ListAlertsParamsSortOrderDesc ListAlertsParamsSortOrder = "desc"
)

// Defines values for ListAllocationsParamsSortBy.
const (
	ListAllocationsParamsSortByAllocationType ListAllocationsParamsSortBy = "allocationType"
	ListAllocationsParamsSortByCreateTime     ListAllocationsParamsSortBy = "createTime"
	ListAllocationsParamsSortByName           ListAllocationsParamsSortBy = "name"
	ListAllocationsParamsSortByOwner          ListAllocationsParamsSortBy = "owner"
	ListAllocationsParamsSortByType           ListAllocationsParamsSortBy = "type"
	ListAllocationsParamsSortByUpdateTime     ListAllocationsParamsSortBy = "updateTime"
)

// Defines values for ListAllocationsParamsSortOrder.
const (
	ListAllocationsParamsSortOrderAsc  ListAllocationsParamsSortOrder = "asc"
	ListAllocationsParamsSortOrderDesc ListAllocationsParamsSortOrder = "desc"
)

// Defines values for ListAttributionGroupsParamsSortBy.
const (
	ListAttributionGroupsParamsSortByCreateTime  ListAttributionGroupsParamsSortBy = "createTime"
	ListAttributionGroupsParamsSortByDescription ListAttributionGroupsParamsSortBy = "description"
	ListAttributionGroupsParamsSortByName        ListAttributionGroupsParamsSortBy = "name"
	ListAttributionGroupsParamsSortByOwner       ListAttributionGroupsParamsSortBy = "owner"
	ListAttributionGroupsParamsSortByType        ListAttributionGroupsParamsSortBy = "type"
	ListAttributionGroupsParamsSortByUpdateTime  ListAttributionGroupsParamsSortBy = "updateTime"
)

// Defines values for ListAttributionGroupsParamsSortOrder.
const (
	ListAttributionGroupsParamsSortOrderAsc  ListAttributionGroupsParamsSortOrder = "asc"
	ListAttributionGroupsParamsSortOrderDesc ListAttributionGroupsParamsSortOrder = "desc"
)

// Defines values for ListAttributionsParamsSortBy.
const (
	ListAttributionsParamsSortByCreateTime  ListAttributionsParamsSortBy = "createTime"
	ListAttributionsParamsSortByDescription ListAttributionsParamsSortBy = "description"
	ListAttributionsParamsSortByName        ListAttributionsParamsSortBy = "name"
	ListAttributionsParamsSortByOwner       ListAttributionsParamsSortBy = "owner"
	ListAttributionsParamsSortByType        ListAttributionsParamsSortBy = "type"
	ListAttributionsParamsSortByUpdateTime  ListAttributionsParamsSortBy = "updateTime"
)

// Defines values for ListAttributionsParamsSortOrder.
const (
	ListAttributionsParamsSortOrderAsc  ListAttributionsParamsSortOrder = "asc"
	ListAttributionsParamsSortOrderDesc ListAttributionsParamsSortOrder = "desc"
)

// Defines values for ListDimensionsParamsSortBy.
const (
	ListDimensionsParamsSortByKey       ListDimensionsParamsSortBy = "key"
	ListDimensionsParamsSortByLabel     ListDimensionsParamsSortBy = "label"
	ListDimensionsParamsSortByTimestamp ListDimensionsParamsSortBy = "timestamp"
	ListDimensionsParamsSortByType      ListDimensionsParamsSortBy = "type"
)

// Defines values for ListDimensionsParamsSortOrder.
const (
	Asc  ListDimensionsParamsSortOrder = "asc"
	Desc ListDimensionsParamsSortOrder = "desc"
)

// Defines values for DatahubEventsJSONBodyEventsDimensionsType.
const (
	Fixed        DatahubEventsJSONBodyEventsDimensionsType = "fixed"
	Label        DatahubEventsJSONBodyEventsDimensionsType = "label"
	ProjectLabel DatahubEventsJSONBodyEventsDimensionsType = "project_label"
	SystemLabel  DatahubEventsJSONBodyEventsDimensionsType = "system_label"
)

// Defines values for GetResourcePermissionParamsResourceType.
const (
	GetResourcePermissionParamsResourceTypeAlerts            GetResourcePermissionParamsResourceType = "alerts"
	GetResourcePermissionParamsResourceTypeAllocations       GetResourcePermissionParamsResourceType = "allocations"
	GetResourcePermissionParamsResourceTypeAttributiongroups GetResourcePermissionParamsResourceType = "attributiongroups"
	GetResourcePermissionParamsResourceTypeAttributions      GetResourcePermissionParamsResourceType = "attributions"
	GetResourcePermissionParamsResourceTypeBudgets           GetResourcePermissionParamsResourceType = "budgets"
	GetResourcePermissionParamsResourceTypeReports           GetResourcePermissionParamsResourceType = "reports"
)

// Defines values for UpdateResourcePermissionParamsResourceType.
const (
	Alerts            UpdateResourcePermissionParamsResourceType = "alerts"
	Allocations       UpdateResourcePermissionParamsResourceType = "allocations"
	Attributiongroups UpdateResourcePermissionParamsResourceType = "attributiongroups"
	Attributions      UpdateResourcePermissionParamsResourceType = "attributions"
	Budgets           UpdateResourcePermissionParamsResourceType = "budgets"
	Reports           UpdateResourcePermissionParamsResourceType = "reports"
)

// Defines values for UpdateResourcePermissionJSONBodyPublic.
const (
	Editor UpdateResourcePermissionJSONBodyPublic = "editor"
	Viewer UpdateResourcePermissionJSONBodyPublic = "viewer"
)

// AccountManagerListItem defines model for AccountManagerListItem.
type AccountManagerListItem struct {
	CalendlyLink *string `json:"calendlyLink,omitempty"`
	Email        *string `json:"email,omitempty"`
	Id           *string `json:"id,omitempty"`
	Name         *string `json:"name,omitempty"`
	Role         *string `json:"role,omitempty"`
}

// AdvancedAnalysis Advanced analysis options. Each of these can be set independently
type AdvancedAnalysis struct {
	Forecast     *bool `json:"forecast,omitempty"`
	NotTrending  *bool `json:"notTrending,omitempty"`
	TrendingDown *bool `json:"trendingDown,omitempty"`
	TrendingUp   *bool `json:"trendingUp,omitempty"`
}

// Alert defines model for Alert.
type Alert struct {
	Config *AlertConfig `json:"config,omitempty"`

	// CreateTime The time when the alter was created (in UNIX timestamp).
	CreateTime *int64 `json:"createTime,omitempty"`

	// Id Alert ID.
	Id *string `json:"id,omitempty"`

	// LastAlerted Last time the alert was triggered (in UNIX timestamp).
	LastAlerted *int64 `json:"lastAlerted,omitempty"`

	// Name Alert Name.
	Name string `json:"name"`

	// Recipients List of emails that will be notified when the alert is triggered.
	Recipients *[]string `json:"recipients,omitempty"`

	// UpdateTime Last time the alert was modified (in UNIX timestamp).
	UpdateTime *int64 `json:"updateTime,omitempty"`
}

// AlertConfig defines model for AlertConfig.
type AlertConfig struct {
	// Attributions The attributions selected define the scope to monitor.
	Attributions *[]string  `json:"attributions,omitempty"`
	Condition    *Condition `json:"condition,omitempty"`
	Currency     *Currency  `json:"currency,omitempty"`
	DataSource   *string    `json:"dataSource,omitempty"`

	// EvaluateForEach Add a dimension to break down the evaluation of the condition. For example, evaluate a condition over an attribution for each "Service".
	EvaluateForEach *string           `json:"evaluateForEach,omitempty"`
	Metric          MetricConfig      `json:"metric"`
	Operator        *MetricFilterText `json:"operator,omitempty"`

	// Scopes The filters selected define the scope of the alert.
	Scopes *[]Scope `json:"scopes,omitempty"`

	// TimeInterval The time interval to evaluate the condition.
	TimeInterval AlertConfigTimeInterval `json:"timeInterval"`
	Value        float64                 `json:"value"`
}

// AlertConfigTimeInterval The time interval to evaluate the condition.
type AlertConfigTimeInterval string

// AlertRequest defines model for AlertRequest.
type AlertRequest struct {
	Config AlertConfig `json:"config"`

	// Name Name of the alert.
	Name string `json:"name"`

	// Recipients List of emails that will be notified when the alert is triggered
	Recipients *[]string `json:"recipients,omitempty"`
}

// AlertThreshold defines model for AlertThreshold.
type AlertThreshold struct {
	Amount     *float64 `json:"amount,omitempty"`
	Percentage *float64 `json:"percentage,omitempty"`
}

// AlertUpdateRequest defines model for AlertUpdateRequest.
type AlertUpdateRequest struct {
	Config AlertConfig `json:"config"`

	// Name Alert name
	Name *string `json:"name,omitempty"`

	// Recipients List of emails that will be notified when the alert is triggered
	Recipients *[]string `json:"recipients,omitempty"`
}

// AllocationComponent defines model for AllocationComponent.
type AllocationComponent struct {
	// IncludeNull Include null values
	IncludeNull *bool `json:"include_null,omitempty"`

	// InverseSelection If true, all selected values will be excluded.
	InverseSelection *bool `json:"inverse_selection,omitempty"`

	// Key Key of a dimension. Examples: "billing_account_id", "country", etc.
	Key string `json:"key"`

	// Mode Filter mode to apply
	Mode   AllocationComponentMode `json:"mode"`
	Type   DimensionsTypes         `json:"type"`
	Values []string                `json:"values"`
}

// AllocationComponentMode Filter mode to apply
type AllocationComponentMode string

// AllocationDeleteValidation defines model for AllocationDeleteValidation.
type AllocationDeleteValidation struct {
	// Error Error message explaining why deletion failed
	Error *string `json:"error,omitempty"`

	// Id Allocation ID
	Id *string `json:"id,omitempty"`

	// Resources Map of resources using this allocation, keyed by resource type
	Resources *map[string][]ResourceReference `json:"resources,omitempty"`

	// Type Type of allocation (single or group)
	Type *AllocationDeleteValidationType `json:"type,omitempty"`
}

// AllocationDeleteValidationType Type of allocation (single or group)
type AllocationDeleteValidationType string

// AllocationListItem defines model for AllocationListItem.
type AllocationListItem struct {
	// AllocationType Type of allocation (single or group)
	AllocationType *AllocationListItemAllocationType `json:"allocationType,omitempty"`

	// CreateTime The time when the allocation was created (in UNIX timestamp).
	CreateTime *int64 `json:"createTime,omitempty"`

	// Id Allocation ID
	Id *string `json:"id,omitempty"`

	// Name Allocation name
	Name *string `json:"name,omitempty"`

	// Owner Allocation owner
	Owner *string `json:"owner,omitempty"`

	// Type Type of allocation (preset or custom)
	Type *string `json:"type,omitempty"`

	// UpdateTime Last time the allocation was modified (in UNIX timestamp).
	UpdateTime *int64 `json:"updateTime,omitempty"`

	// UrlUI URL to view the allocation in DoiT Cloud Navigator.
	UrlUI *string `json:"urlUI,omitempty"`
}

// AllocationListItemAllocationType Type of allocation (single or group)
type AllocationListItemAllocationType string

// AllocationRule defines model for AllocationRule.
type AllocationRule struct {
	// Components List of allocation filter components
	Components *[]AllocationComponent `json:"components,omitempty"`

	// Formula Formula for combining components (A is the first component, B is the second one, etc.)
	Formula *string `json:"formula,omitempty"`
}

// AnomaliesResponse defines model for AnomaliesResponse.
type AnomaliesResponse struct {
	Anomalies *[]AnomalyItem `json:"anomalies,omitempty"`
	PageToken *string        `json:"pageToken,omitempty"`
	RowCount  *int64         `json:"rowCount,omitempty"`
}

// AnomalyItem defines model for AnomalyItem.
type AnomalyItem struct {
	// Acknowledged Has the anomaly been acknowledged
	Acknowledged *bool `json:"acknowledged,omitempty"`

	// Attribution Attribution ID
	Attribution string `json:"attribution"`

	// BillingAccount Billing account ID
	BillingAccount string `json:"billingAccount"`

	// CostOfAnomaly Cost of the anomaly over and above the expected normal cost
	CostOfAnomaly float64 `json:"costOfAnomaly"`

	// EndTime End of the anomaly
	EndTime *int    `json:"endTime"`
	Id      *string `json:"id,omitempty"`

	// Platform Cloud Provider name
	Platform string `json:"platform"`

	// Scope Scope: Project or Account
	Scope string `json:"scope"`

	// ServiceName Service name
	ServiceName string `json:"serviceName"`

	// SeverityLevel Severity level: Information, Warning or Critical
	SeverityLevel string `json:"severityLevel"`

	// StartTime Usage start time of the anomaly
	StartTime int64              `json:"startTime"`
	Status    *AnomalyItemStatus `json:"status"`

	// TimeFrame Timeframe: Daily or Hourly
	TimeFrame string          `json:"timeFrame"`
	Top3SKUs  AnomalySKUArray `json:"top3SKUs"`
}

// AnomalyItemStatus defines model for AnomalyItem.Status.
type AnomalyItemStatus string

// AnomalySKU defines model for AnomalySKU.
type AnomalySKU struct {
	Cost *float64 `json:"cost,omitempty"`
	Name *string  `json:"name,omitempty"`
}

// AnomalySKUArray defines model for AnomalySKUArray.
type AnomalySKUArray = []AnomalySKU

// AssetItem defines model for AssetItem.
type AssetItem struct {
	// CreateTime The time when the asset was created, in milliseconds since the epoch
	CreateTime *int64  `json:"createTime,omitempty"`
	Id         *string `json:"id,omitempty"`
	Name       *string `json:"name,omitempty"`
	Quantity   *int64  `json:"quantity,omitempty"`
	Type       *string `json:"type,omitempty"`
	Url        *string `json:"url,omitempty"`
}

// AssetProperties defines model for AssetProperties.
type AssetProperties struct {
	CustomerDomain *string       `json:"customerDomain,omitempty"`
	CustomerID     *string       `json:"customerID,omitempty"`
	Reseller       *string       `json:"reseller,omitempty"`
	Subscription   *Subscription `json:"subscription,omitempty"`
}

// AssetResponse defines model for AssetResponse.
type AssetResponse struct {
	AccountID *string `json:"accountID,omitempty"`
}

// AttributionAPI defines model for AttributionAPI.
type AttributionAPI struct {
	// AnomalyDetection Indicates if the attribution has an active anomaly detection.
	AnomalyDetection *bool `json:"anomalyDetection,omitempty"`

	// Components List of Attribution filters
	Components *[]AttributionComponent `json:"components,omitempty"`

	// CreateTime Creation time of this Attribution (in unix milliseconds)
	CreateTime *int64 `json:"createTime,omitempty"`

	// Description Attribution description
	Description *string `json:"description,omitempty"`

	// Formula Attribution formula (A is first component, B is second component, C is third component, etc.)
	Formula *string `json:"formula,omitempty"`

	// Id attribution ID, identifying the attribution
	// in:path
	Id *string `json:"id,omitempty"`

	// Name Attribution Name
	Name string `json:"name"`

	// Type Type of Attribution can be either "preset" or "custom"
	Type *string `json:"type,omitempty"`

	// UpdateTime Last time somebody modified this Attribution (in unix milliseconds)
	UpdateTime *int64 `json:"updateTime,omitempty"`
}

// AttributionComponent defines model for AttributionComponent.
type AttributionComponent struct {
	IncludeNull *bool `json:"include_null,omitempty"`

	// InverseSelection If true, all selected values will be excluded.
	InverseSelection *bool `json:"inverse_selection,omitempty"`

	// Key Key of a dimension. Examples: "service_id", "cloud_provider", "sku_description"
	Key string `json:"key"`

	// Regexp Filter the dimension values using regular expression.
	Regexp *string         `json:"regexp,omitempty"`
	Type   DimensionsTypes `json:"type"`
	Values *[]string       `json:"values,omitempty"`
}

// AttributionDeleteValidation defines model for AttributionDeleteValidation.
type AttributionDeleteValidation struct {
	// Error Error message explaining why the deletion failed
	Error *string `json:"error"`

	// Id ID of the attribution that could not be deleted
	Id *string `json:"id,omitempty"`

	// Resources Map of resources blocking the deletion. Only resource types that are blocking will be present in the response.
	// For attribution group deletion, possible blocking resources are: budgets, alerts, reports.
	// For attribution deletion, possible blocking resources are: budgets, alerts, reports, attributions, attributionGroups.
	Resources *BlockingResources `json:"resources,omitempty"`
}

// AttributionGroupDeleteValidation defines model for AttributionGroupDeleteValidation.
type AttributionGroupDeleteValidation struct {
	// Error Error message explaining why the deletion failed
	Error *string `json:"error"`

	// Id ID of the attribution group that could not be deleted
	Id *string `json:"id,omitempty"`

	// Resources Map of resources blocking the deletion. Only resource types that are blocking will be present in the response.
	// For attribution group deletion, possible blocking resources are: budgets, alerts, reports.
	// For attribution deletion, possible blocking resources are: budgets, alerts, reports, attributions, attributionGroups.
	Resources *BlockingResources `json:"resources,omitempty"`
}

// AttributionGroupGetExternal defines model for AttributionGroupGetExternal.
type AttributionGroupGetExternal struct {
	Attributions *[]SortableItem `json:"attributions,omitempty"`
	Cloud        *[]string       `json:"cloud,omitempty"`

	// Customer A DocumentRef is a reference to a Firestore document.
	Customer    *DocumentRef `json:"customer,omitempty"`
	Description *string      `json:"description,omitempty"`
	Id          *string      `json:"id,omitempty"`
	Name        *string      `json:"name,omitempty"`

	// Organization A DocumentRef is a reference to a Firestore document.
	Organization *DocumentRef `json:"organization,omitempty"`
	TimeCreated  *time.Time   `json:"timeCreated,omitempty"`
	TimeModified *time.Time   `json:"timeModified,omitempty"`
	Type         *ObjectType  `json:"type,omitempty"`
}

// AttributionGroupRequest defines model for AttributionGroupRequest.
type AttributionGroupRequest struct {
	// Attributions List of the attributions that are part of the attribution group
	Attributions []string `json:"attributions"`

	// Description Description of the attribution group
	Description *string `json:"description,omitempty"`

	// Name Name of the attribution group
	Name string `json:"name"`

	// NullFallback Custom label for any values that do not fit into attributions
	NullFallback *string `json:"nullFallback,omitempty"`
}

// AttributionGroupUpdateRequest defines model for AttributionGroupUpdateRequest.
type AttributionGroupUpdateRequest struct {
	// Attributions List of the attributions that are part of the attribution group
	Attributions []string `json:"attributions"`

	// Description Description of the attribution group
	Description *string `json:"description,omitempty"`

	// Name Name of the attribution group
	Name string `json:"name"`

	// NullFallback Custom label for any values that do not fit into attributions
	NullFallback *string `json:"nullFallback,omitempty"`
}

// AttributionGroupsListExternal defines model for AttributionGroupsListExternal.
type AttributionGroupsListExternal struct {
	// AttributionGroups Array of AttributionGroup
	AttributionGroups *[]SortableItem `json:"attributionGroups,omitempty"`

	// PageToken Page token, returned by a previous call, to request the next page of results
	PageToken *string `json:"pageToken,omitempty"`

	// RowCount AttributionGroup rows count
	RowCount *int64 `json:"rowCount,omitempty"`
}

// AttributionListItem defines model for AttributionListItem.
type AttributionListItem struct {
	// CreateTime Creation time of this Attribution (in unix milliseconds)
	CreateTime *int64 `json:"createTime,omitempty"`

	// Description Attribution description
	Description *string `json:"description,omitempty"`

	// Id attribution ID, identifying the attribution
	// in:path
	Id *string `json:"id,omitempty"`

	// Name Attribution Name
	Name string `json:"name"`

	// Owner Attribution owner
	Owner *string `json:"owner,omitempty"`

	// Type Type of Attribution can be either preset or custom
	Type *string `json:"type,omitempty"`

	// UpdateTime Last time somebody modified this Attribution (in unix milliseconds)
	UpdateTime *int64 `json:"updateTime,omitempty"`
}

// BlockingResources Map of resources blocking the deletion. Only resource types that are blocking will be present in the response.
// For attribution group deletion, possible blocking resources are: budgets, alerts, reports.
// For attribution deletion, possible blocking resources are: budgets, alerts, reports, attributions, attributionGroups.
type BlockingResources struct {
	// Alerts List of alerts using this resource
	Alerts *[]ResourceReference `json:"alerts,omitempty"`

	// AttributionGroups List of attribution groups using this resource (only applicable for attribution deletion)
	AttributionGroups *[]ResourceReference `json:"attributionGroups,omitempty"`

	// Attributions List of attributions using this resource (only applicable for attribution deletion)
	Attributions *[]ResourceReference `json:"attributions,omitempty"`

	// Budgets List of budgets using this resource
	Budgets *[]ResourceReference `json:"budgets,omitempty"`

	// Reports List of reports using this resource
	Reports *[]ResourceReference `json:"reports,omitempty"`
}

// Budget defines model for Budget.
type Budget struct {
	// Alerts List of up to three thresholds defined as percentage of amount
	Alerts *[]ExternalBudgetAlert `json:"alerts,omitempty"`

	// Amount Budget period amount
	// required: true(if usePrevSpend is false)
	Amount *float64 `json:"amount,omitempty"`

	// Collaborators List of permitted users to view/edit the report
	Collaborators *[]Collaborator `json:"collaborators,omitempty"`
	Currency      Currency        `json:"currency"`

	// Description Budget description
	Description *string `json:"description,omitempty"`

	// EndPeriod Fixed budget end date
	// required: true(if budget type is fixed), in milliseconds since the epoch.
	EndPeriod *int64 `json:"endPeriod,omitempty"`

	// GrowthPerPeriod Periodical growth percentage in recurring budget
	GrowthPerPeriod *float64 `json:"growthPerPeriod,omitempty"`

	// Id budget ID, identifying the report
	// in:path
	Id *string `json:"id,omitempty"`

	// Metric Budget metric - currently fixed to "cost"
	Metric *string `json:"metric,omitempty"`

	// Name Budget Name
	Name   string        `json:"name"`
	Public *BudgetPublic `json:"public,omitempty"`

	// Recipients List of emails to notify when reaching alert threshold
	Recipients *[]string `json:"recipients,omitempty"`

	// RecipientsSlackChannels List of slack channels to notify when reaching alert threshold
	RecipientsSlackChannels *[]SlackChannel `json:"recipientsSlackChannels,omitempty"`

	// Scope List of attributions that defines that budget scope
	Scope []string `json:"scope"`

	// StartPeriod Budget start Date, in milliseconds since the epoch.
	StartPeriod int64 `json:"startPeriod"`

	// TimeInterval Recurring budget interval can be on of: ["day", "week", "month", "quarter","year"]
	TimeInterval string `json:"timeInterval"`

	// Type budget type can be one of: ["fixed", "recurring"]
	Type string `json:"type"`

	// UsePrevSpend Use the last period's spend as the target amount for recurring budgets
	UsePrevSpend *bool `json:"usePrevSpend,omitempty"`
}

// BudgetPublic defines model for Budget.Public.
type BudgetPublic string

// BudgetAPI defines model for BudgetAPI.
type BudgetAPI struct {
	// Alerts List of up to three thresholds defined as percentage of amount
	Alerts *[]ExternalBudgetAlert `json:"alerts,omitempty"`

	// Amount Budget period amount
	// required: true(if usePrevSpend is false)
	Amount *float64 `json:"amount,omitempty"`

	// Collaborators List of permitted users to view/edit the report
	Collaborators *[]Collaborator `json:"collaborators,omitempty"`

	// CreateTime Creation time (in UNIX timestamp)
	CreateTime         *int64   `json:"createTime,omitempty"`
	Currency           Currency `json:"currency"`
	CurrentUtilization *float64 `json:"currentUtilization,omitempty"`

	// Description Budget description
	Description *string `json:"description,omitempty"`

	// EndPeriod Fixed budget end date (in UNIX timestamp)
	// required: true(if budget type is fixed)
	EndPeriod             *int64   `json:"endPeriod,omitempty"`
	ForecastedUtilization *float64 `json:"forecastedUtilization,omitempty"`

	// GrowthPerPeriod Periodical growth percentage in recurring budget
	GrowthPerPeriod *float64 `json:"growthPerPeriod,omitempty"`

	// Id budget ID, identifying the report
	// in:path
	Id *string `json:"id,omitempty"`

	// Metric Budget metric - currently fixed to "cost"
	Metric *string `json:"metric,omitempty"`

	// Name Budget Name
	Name   string           `json:"name"`
	Public *BudgetAPIPublic `json:"public,omitempty"`

	// Recipients List of emails to notify when reaching alert threshold
	Recipients *[]string `json:"recipients,omitempty"`

	// RecipientsSlackChannels List of slack channels to notify when reaching alert threshold
	RecipientsSlackChannels *[]SlackChannel `json:"recipientsSlackChannels,omitempty"`

	// Scopes The filters selected define the scope of the budget.
	Scopes []Scope `json:"scopes"`

	// StartPeriod Budget start Date (in UNIX timestamp)
	StartPeriod int64 `json:"startPeriod"`

	// TimeInterval Recurring budget interval can be one of: ["day", "week", "month","quarter","year"]
	TimeInterval string `json:"timeInterval"`

	// Type budget type can be one of: ["fixed", "recurring"]
	Type string `json:"type"`

	// UpdateTime Update time (in UNIX timestamp)
	UpdateTime *int64 `json:"updateTime,omitempty"`

	// UsePrevSpend Use the last period's spend as the target amount for recurring budgets
	UsePrevSpend *bool `json:"usePrevSpend,omitempty"`
}

// BudgetAPIPublic defines model for BudgetAPI.Public.
type BudgetAPIPublic string

// BudgetCreateUpdateAlert defines model for BudgetCreateUpdateAlert.
type BudgetCreateUpdateAlert struct {
	Percentage *float64 `json:"percentage,omitempty"`
}

// BudgetCreateUpdateRequest defines model for BudgetCreateUpdateRequest.
type BudgetCreateUpdateRequest struct {
	// Alerts List of up to three thresholds defined as percentage of amount
	Alerts *[]BudgetCreateUpdateAlert `json:"alerts,omitempty"`

	// Amount Budget period amount
	// required: true(if usePrevSpend is false)
	Amount *float64 `json:"amount,omitempty"`

	// Collaborators List of permitted users to view/edit the report
	Collaborators *[]Collaborator `json:"collaborators,omitempty"`
	Currency      *Currency       `json:"currency,omitempty"`

	// Description Budget description
	Description *string `json:"description,omitempty"`

	// EndPeriod Fixed budget end date
	// required: true(if budget type is fixed)
	EndPeriod *int64 `json:"endPeriod,omitempty"`

	// GrowthPerPeriod Periodical growth percentage in recurring budget
	GrowthPerPeriod *float64 `json:"growthPerPeriod,omitempty"`

	// Metric Budget metric - currently fixed to "cost"
	Metric *string `json:"metric,omitempty"`

	// Name Budget Name
	Name   *string                          `json:"name,omitempty"`
	Public *BudgetCreateUpdateRequestPublic `json:"public,omitempty"`

	// Recipients List of emails to notify when reaching alert threshold
	Recipients *[]string `json:"recipients,omitempty"`

	// RecipientsSlackChannels List of slack channels to notify when reaching alert threshold
	RecipientsSlackChannels *[]SlackChannel `json:"recipientsSlackChannels,omitempty"`

	// Scope List of attributions that defines that budget scope
	Scope *[]string `json:"scope,omitempty"`

	// SeasonalAmounts List of seasonal amounts for recurring budgets with different amounts per period
	SeasonalAmounts *[]float64 `json:"seasonalAmounts,omitempty"`

	// StartPeriod Budget start Date
	StartPeriod *int64 `json:"startPeriod,omitempty"`

	// TimeInterval Recurring budget interval can be on of: ["day", "week", "month", "quarter","year"]
	TimeInterval *string `json:"timeInterval,omitempty"`

	// Type budget type can be one of: ["fixed", "recurring"]
	Type *string `json:"type,omitempty"`

	// UsePrevSpend Use the last period's spend as the target amount for recurring budgets
	UsePrevSpend *bool `json:"usePrevSpend,omitempty"`
}

// BudgetCreateUpdateRequestPublic defines model for BudgetCreateUpdateRequest.Public.
type BudgetCreateUpdateRequestPublic string

// BudgetListItem defines model for BudgetListItem.
type BudgetListItem struct {
	AlertThresholds           *[]AlertThreshold `json:"alertThresholds,omitempty"`
	Amount                    *float64          `json:"amount,omitempty"`
	BudgetName                *string           `json:"budgetName,omitempty"`
	CreateTime                *int64            `json:"createTime,omitempty"`
	Currency                  *string           `json:"currency,omitempty"`
	CurrentUtilization        *float64          `json:"currentUtilization,omitempty"`
	EndPeriod                 *int64            `json:"endPeriod,omitempty"`
	ForecastedUtilizationDate *int64            `json:"forecastedUtilizationDate,omitempty"`
	Id                        *string           `json:"id,omitempty"`
	Owner                     *string           `json:"owner,omitempty"`
	Scope                     *[]string         `json:"scope,omitempty"`
	StartPeriod               *int64            `json:"startPeriod,omitempty"`
	TimeInterval              *string           `json:"timeInterval,omitempty"`
	UpdateTime                *int64            `json:"updateTime,omitempty"`
	Url                       *string           `json:"url,omitempty"`
}

// CloudIncidentListItem defines model for CloudIncidentListItem.
type CloudIncidentListItem struct {
	// CreateTime The time when this cloud incident was created, in milliseconds since the epoch.
	CreateTime *int64 `json:"createTime,omitempty"`

	// Id cloud incident id, uniquely identifying the cloud incident
	Id *string `json:"id,omitempty"`

	// Platform The cloud Platform
	Platform *CloudIncidentListItemPlatform `json:"platform,omitempty"`

	// Product The name of the product affected by the cloud incident
	Product *string `json:"product,omitempty"`

	// Status The Status of the issue
	Status *CloudIncidentListItemStatus `json:"status,omitempty"`

	// Title Cloud incident name as provided by cloud platform vendor
	Title *string `json:"title,omitempty"`
}

// CloudIncidentListItemPlatform The cloud Platform
type CloudIncidentListItemPlatform string

// CloudIncidentListItemStatus The Status of the issue
type CloudIncidentListItemStatus string

// Collaborator defines model for Collaborator.
type Collaborator struct {
	Email *string           `json:"email,omitempty"`
	Role  *CollaboratorRole `json:"role,omitempty"`
}

// CollaboratorRole defines model for Collaborator.Role.
type CollaboratorRole string

// CollectionRef A CollectionRef is a reference to Firestore collection.
type CollectionRef struct {
	// ID ID is the collection identifier.
	ID *string `json:"ID,omitempty"`

	// Parent The root collection.
	Parent *map[string]interface{} `json:"Parent,omitempty"`

	// Path The full resource path of the collection: "projects/P/databases/D/documents..."
	Path *string `json:"Path,omitempty"`
}

// Condition defines model for Condition.
type Condition = string

// Currency defines model for Currency.
type Currency string

// DeleteUserResponse defines model for DeleteUserResponse.
type DeleteUserResponse struct {
	// Message Success message
	Message *string `json:"message,omitempty"`
}

// Dimension A dimension to apply to the report.
type Dimension struct {
	// Id The field to apply to the dimension.
	Id   *string          `json:"id,omitempty"`
	Type *DimensionsTypes `json:"type,omitempty"`
}

// DimensionsExternalAPIGetResponse defines model for DimensionsExternalAPIGetResponse.
type DimensionsExternalAPIGetResponse struct {
	Id     *string                `json:"id,omitempty"`
	Label  *string                `json:"label,omitempty"`
	Type   *DimensionsTypes       `json:"type,omitempty"`
	Values *[]ExternalAPIGetValue `json:"values,omitempty"`
}

// DimensionsExternalAPIList defines model for DimensionsExternalAPIList.
type DimensionsExternalAPIList struct {
	Dimensions *[]SortableItem `json:"dimensions,omitempty"`
	PageToken  *string         `json:"pageToken,omitempty"`
	RowCount   *int64          `json:"rowCount,omitempty"`
}

// DimensionsTypes defines model for DimensionsTypes.
type DimensionsTypes string

// DocumentRef A DocumentRef is a reference to a Firestore document.
type DocumentRef struct {
	// ID The ID of the document: the last component of the resource path.
	ID *string `json:"ID,omitempty"`

	// Parent A CollectionRef is a reference to Firestore collection.
	Parent *CollectionRef `json:"Parent,omitempty"`

	// Path The full resource path of the document. A document "doc-1" in collection "coll-1" would be: "projects/P/databases/D/documents/coll-1/doc-1".
	Path *string `json:"Path,omitempty"`
}

// Error defines model for Error.
type Error struct {
	// Error Detailed error message.
	Error *string `json:"error,omitempty"`
}

// ExternalAPIGetValue defines model for ExternalAPIGetValue.
type ExternalAPIGetValue struct {
	Cloud *string `json:"cloud,omitempty"`
	Value *string `json:"value,omitempty"`
}

// ExternalAlertList defines model for ExternalAlertList.
type ExternalAlertList struct {
	// Alerts Array of alerts
	Alerts *[]Alert `json:"alerts,omitempty"`

	// PageToken Page token. It is used to request a specific page of the list results.
	PageToken *string `json:"pageToken,omitempty"`

	// RowCount The number of returned records.
	RowCount *int64 `json:"rowCount,omitempty"`
}

// ExternalBudgetAlert defines model for ExternalBudgetAlert.
type ExternalBudgetAlert struct {
	ForecastedDate *int64   `json:"forecastedDate,omitempty"`
	Percentage     *float64 `json:"percentage,omitempty"`
	Triggered      *bool    `json:"triggered,omitempty"`
}

// ExternalConfig Report configuration
type ExternalConfig struct {
	// AdvancedAnalysis Advanced analysis options. Each of these can be set independently
	AdvancedAnalysis *AdvancedAnalysis          `json:"advancedAnalysis,omitempty"`
	Aggregation      *ExternalConfigAggregation `json:"aggregation,omitempty"`
	Currency         *Currency                  `json:"currency,omitempty"`

	// CustomTimeRange Required when the time range is set to "custom".
	CustomTimeRange *struct {
		// From The start timestamp of the time range in RFC3339 format.
		From *time.Time `json:"from,omitempty"`

		// To The end timestamp of the time range in RFC3339 format.
		To *time.Time `json:"to,omitempty"`
	} `json:"customTimeRange,omitempty"`

	// DataSource Data source of the report.
	DataSource *ExternalConfigDataSource `json:"dataSource,omitempty"`

	// Dimensions See [Dimensions](https://help.doit.com/docs/cloud-analytics/reports/editing-your-cloud-report#dimensions).
	Dimensions *[]Dimension `json:"dimensions,omitempty"`

	// DisplayValues See [View data as (Comparative report)](https://help.doit.com/docs/cloud-analytics/reports/editing-your-cloud-report#view-as).
	DisplayValues *ExternalConfigDisplayValues `json:"displayValues,omitempty"`

	// Filters The filters to apply to the report.
	Filters *[]ExternalConfigFilter `json:"filters,omitempty"`

	// Group The rows that appear in the tabular format of the report. See [Group by](https://help.doit.com/docs/cloud-analytics/reports/editing-your-cloud-report#group-by).
	Group *[]Group `json:"group,omitempty"`

	// IncludePromotionalCredits Whether to include [promotional credits](https://help.doit.com/docs/cloud-analytics/reports/editing-your-cloud-report#promotional-credits).
	// If set to **true**, the report must use time interval `month`, `quarter`, or `year`.
	IncludePromotionalCredits *bool `json:"includePromotionalCredits,omitempty"`

	// IncludeSubtotals Whether to include subgroup totals in the report. This option has no impact when reading a report via API.
	IncludeSubtotals *bool `json:"includeSubtotals,omitempty"`

	// Layout The visualization of the report.
	Layout *ExternalRenderer `json:"layout,omitempty"`

	// Metric The metric to apply.
	Metric *ExternalMetric `json:"metric,omitempty"`

	// MetricFilter The metric filter to limit the report results by value
	MetricFilter *ExternalConfigMetricFilter `json:"metricFilter,omitempty"`

	// SortDimensions This option has no impact when reading reports via API.
	SortDimensions *ExternalConfigSortDimensions `json:"sortDimensions,omitempty"`

	// SortGroups This option has no impact when reading reports via API.
	SortGroups *ExternalConfigSortGroups `json:"sortGroups,omitempty"`

	// Splits The splits to use in the report.
	Splits       *[]ExternalSplit            `json:"splits,omitempty"`
	TimeInterval *ExternalConfigTimeInterval `json:"timeInterval,omitempty"`

	// TimeRange Specify a predefined or custom time range for the report.
	// For example, to specify a custom time range of "last 2 days", set the mode to `last`, the amount to `2`, and the unit to `day`. If `includeCurrent` is `true`, the range will be yesterday and today; otherwise, the range will be yesterday and the day before yesterday.
	// If "custom" type is specified, you need to provide a custom time range in the `customTimeRange` field.
	TimeRange *TimeSettings `json:"timeRange,omitempty"`
}

// ExternalConfigAggregation defines model for ExternalConfig.Aggregation.
type ExternalConfigAggregation string

// ExternalConfigDataSource Data source of the report.
type ExternalConfigDataSource string

// ExternalConfigDisplayValues See [View data as (Comparative report)](https://help.doit.com/docs/cloud-analytics/reports/editing-your-cloud-report#view-as).
type ExternalConfigDisplayValues string

// ExternalConfigSortDimensions This option has no impact when reading reports via API.
type ExternalConfigSortDimensions string

// ExternalConfigSortGroups This option has no impact when reading reports via API.
type ExternalConfigSortGroups string

// ExternalConfigTimeInterval defines model for ExternalConfig.TimeInterval.
type ExternalConfigTimeInterval string

// ExternalConfigFilter To filter or exclude certain values by type.
// When using attributions as a filter, both the type and the ID must be "attribution", and the values array contains the attribution IDs.
type ExternalConfigFilter struct {
	// Id The field to filter on
	Id *string `json:"id,omitempty"`

	// Inverse Set to `true` to exclude the values.
	Inverse *bool                     `json:"inverse,omitempty"`
	Type    *ExternalConfigFilterType `json:"type,omitempty"`

	// Values Values to filter on
	Values *[]string `json:"values,omitempty"`
}

// ExternalConfigFilterType defines model for ExternalConfigFilter.Type.
type ExternalConfigFilterType string

// ExternalConfigMetricFilter The metric filter to limit the report results by value
type ExternalConfigMetricFilter struct {
	// Metric The metric to apply.
	Metric   *ExternalMetric                     `json:"metric,omitempty"`
	Operator *ExternalConfigMetricFilterOperator `json:"operator,omitempty"`
	Values   *[]float64                          `json:"values,omitempty"`
}

// ExternalConfigMetricFilterOperator defines model for ExternalConfigMetricFilter.Operator.
type ExternalConfigMetricFilterOperator string

// ExternalMetric The metric to apply.
type ExternalMetric struct {
	Type *ExternalMetricType `json:"type,omitempty"`

	// Value For basic metrics, the value can be one of: ["cost", "usage", "savings"]
	// If using custom metrics, the value must refer to an existing custom id.
	Value *string `json:"value,omitempty"`
}

// ExternalMetricType defines model for ExternalMetric.Type.
type ExternalMetricType string

// ExternalOrigin defines model for ExternalOrigin.
type ExternalOrigin struct {
	// Id ID of the origin
	Id *string `json:"id,omitempty"`

	// Type Type of the origin.
	// The only supported values at the moment: "attribution", "unallocated"
	Type *ExternalOriginType `json:"type,omitempty"`
}

// ExternalOriginType Type of the origin.
// The only supported values at the moment: "attribution", "unallocated"
type ExternalOriginType string

// ExternalRenderer The visualization of the report.
type ExternalRenderer string

// ExternalReport defines model for ExternalReport.
type ExternalReport struct {
	// Config Report configuration
	Config *ExternalConfig `json:"config,omitempty"`

	// Description Report description.
	Description *string `json:"description,omitempty"`

	// Id Report id.
	Id *string `json:"id,omitempty"`

	// Name Report name.
	Name string `json:"name"`

	// Type Report type.
	Type *ExternalReportType `json:"type,omitempty"`
}

// ExternalReportType Report type.
type ExternalReportType string

// ExternalSplit A cost split to apply to the report
type ExternalSplit struct {
	// Id ID of the field to split
	Id *string `json:"id,omitempty"`

	// IncludeOrigin if set, include the origin
	IncludeOrigin *bool              `json:"includeOrigin,omitempty"`
	Mode          *ExternalSplitMode `json:"mode,omitempty"`
	Origin        *ExternalOrigin    `json:"origin,omitempty"`

	// Targets Targets for the split
	Targets *[]ExternalSplitTarget `json:"targets,omitempty"`

	// Type Type of the split.
	// The only supported value at the moment: "attribution_group"
	Type *ExternalSplitType `json:"type,omitempty"`
}

// ExternalSplitMode defines model for ExternalSplit.Mode.
type ExternalSplitMode string

// ExternalSplitType Type of the split.
// The only supported value at the moment: "attribution_group"
type ExternalSplitType string

// ExternalSplitTarget defines model for ExternalSplitTarget.
type ExternalSplitTarget struct {
	// Id ID of the target
	Id *string `json:"id,omitempty"`

	// Type Type of the target.
	// The only supported value at the moment: "attribution"
	Type *ExternalSplitTargetType `json:"type,omitempty"`

	// Value Percent of the target, represented in float format. E.g. 30% is 0.3. Must be set only if Split Mode is custom.
	Value *float64 `json:"value,omitempty"`
}

// ExternalSplitTargetType Type of the target.
// The only supported value at the moment: "attribution"
type ExternalSplitTargetType string

// ExternalUpdateReport defines model for ExternalUpdateReport.
type ExternalUpdateReport struct {
	// Config Report configuration
	Config *ExternalConfig `json:"config,omitempty"`

	// Description Report description
	Description *string `json:"description,omitempty"`

	// Name Report name
	Name *string `json:"name,omitempty"`
}

// Filter An expression for filtering the results. The syntax is `key:[<value>]`. Multiple filters can be connected using a pipe |. See [Filters](https://developer.doit.com/docs/filters).
type Filter = string

// Group The dimension that defines a row in the report.
type Group struct {
	// Id Dimension ID.
	Id *string `json:"id,omitempty"`

	// Limit To limit the number of results based on ranking. See [Limit by top/bottom](https://help.doit.com/docs/cloud-analytics/reports/editing-your-cloud-report#limit-by-topbottom).
	Limit *Limit           `json:"limit,omitempty"`
	Type  *DimensionsTypes `json:"type,omitempty"`
}

// InviteResponse defines model for InviteResponse.
type InviteResponse struct {
	// Message Success message
	Message *string          `json:"message,omitempty"`
	User    *InvitedUserBody `json:"user,omitempty"`
}

// InviteUserRequest defines model for InviteUserRequest.
type InviteUserRequest struct {
	// Email The email address of the user to invite
	Email openapi_types.Email `json:"email"`

	// OrganizationId The id of the organization to assign the user to
	OrganizationId *string `json:"organizationId,omitempty"`

	// RoleId The id of the role to assign to the user
	RoleId *string `json:"roleId,omitempty"`
}

// InvitedUserBody defines model for InvitedUserBody.
type InvitedUserBody struct {
	// Email The email address of the invited user
	Email *string `json:"email,omitempty"`

	// Id The unique id of the invited user
	Id *string `json:"id,omitempty"`

	// OrganizationId The id of the organization assigned to the user
	OrganizationId *string `json:"organizationId,omitempty"`

	// RoleId The id of the role assigned to the user
	RoleId *string `json:"roleId,omitempty"`

	// Status The status of the user (invited)
	Status *InvitedUserBodyStatus `json:"status,omitempty"`
}

// InvitedUserBodyStatus The status of the user (invited)
type InvitedUserBodyStatus string

// InvoiceListItem defines model for InvoiceListItem.
type InvoiceListItem struct {
	// BalanceAmount Invoice balance to be paid
	BalanceAmount *float64  `json:"balanceAmount,omitempty"`
	Currency      *Currency `json:"currency,omitempty"`

	// DueDate The last day to pay the invoice, in milliseconds since the epoch
	DueDate *int64 `json:"dueDate,omitempty"`

	// Id Invoice number, identifying the invoice.
	Id *string `json:"id,omitempty"`

	// InvoiceDate The time when this invoice was issued, in milliseconds since the epoch.
	InvoiceDate *int64           `json:"invoiceDate,omitempty"`
	Platform    *InvoicePlatform `json:"platform,omitempty"`

	// Status Status of the invoice
	Status *InvoiceListItemStatus `json:"status,omitempty"`

	// TotalAmount Total invoiced amount
	TotalAmount *float64 `json:"totalAmount,omitempty"`

	// Url Link to [invoice details page](https://help.doit.com/docs/billing/invoices-and-payments/managing-invoices) in the DoiT console. You can download the PDF invoice from the invoice details page.
	Url *string `json:"url,omitempty"`
}

// InvoiceListItemStatus Status of the invoice
type InvoiceListItemStatus string

// InvoicePlatform defines model for InvoicePlatform.
type InvoicePlatform string

// Limit To limit the number of results based on ranking. See [Limit by top/bottom](https://help.doit.com/docs/cloud-analytics/reports/editing-your-cloud-report#limit-by-topbottom).
type Limit struct {
	// Metric The metric to apply.
	Metric *ExternalMetric `json:"metric,omitempty"`
	Sort   *LimitSort      `json:"sort,omitempty"`

	// Value The number of items to show
	Value *int64 `json:"value,omitempty"`
}

// LimitSort defines model for Limit.Sort.
type LimitSort string

// ListItem defines model for ListItem.
type ListItem struct {
	Currency    *string  `json:"currency,omitempty"`
	Description *string  `json:"description,omitempty"`
	Details     *string  `json:"details,omitempty"`
	Price       *float64 `json:"price,omitempty"`
	Qty         *float64 `json:"qty,omitempty"`
	Type        *string  `json:"type,omitempty"`
}

// ListUsersResponseBody defines model for ListUsersResponseBody.
type ListUsersResponseBody struct {
	// RowCount The number of returned records.
	RowCount *int64          `json:"rowCount,omitempty"`
	Users    *[]UserListItem `json:"users,omitempty"`
}

// MetricConfig defines model for MetricConfig.
type MetricConfig struct {
	Type  MetricType `json:"type"`
	Value string     `json:"value"`
}

// MetricFilterText defines model for MetricFilterText.
type MetricFilterText = string

// MetricType defines model for MetricType.
type MetricType = string

// NewAllocationResponse defines model for NewAllocationResponse.
type NewAllocationResponse struct {
	// AllocationType Type of the created allocation
	AllocationType *NewAllocationResponseAllocationType `json:"allocationType,omitempty"`

	// Id ID of the created allocation
	Id *string `json:"id,omitempty"`
}

// NewAllocationResponseAllocationType Type of the created allocation
type NewAllocationResponseAllocationType string

// ObjectType defines model for ObjectType.
type ObjectType = string

// Organization defines model for Organization.
type Organization struct {
	// Id The unique ID of the organization
	Id *string `json:"id,omitempty"`

	// Name The name of the organization
	Name *string `json:"name,omitempty"`
}

// PlatformAPI defines model for PlatformAPI.
type PlatformAPI struct {
	DisplayName *string `json:"displayName,omitempty"`
	Id          *string `json:"id,omitempty"`
}

// ProductAPI defines model for ProductAPI.
type ProductAPI struct {
	DisplayName *string `json:"displayName,omitempty"`
	Id          *string `json:"id,omitempty"`
	Platform    *string `json:"platform,omitempty"`
}

// RenewalSettings defines model for RenewalSettings.
type RenewalSettings struct {
	RenewalType *string `json:"renewalType,omitempty"`
}

// Report defines model for Report.
type Report struct {
	// CreateTime The time when the report was created, in milliseconds since the epoch.
	CreateTime *int64 `json:"createTime,omitempty"`

	// Id Report id.
	Id *string `json:"id,omitempty"`

	// Owner The report owner in a form of user@domain.com
	Owner *string `json:"owner,omitempty"`

	// ReportName The name of the report.
	ReportName *string     `json:"reportName,omitempty"`
	Type       *ReportType `json:"type,omitempty"`

	// UpdateTime The time when this report was last updated, in milliseconds since the epoch.
	UpdateTime *int64 `json:"updateTime,omitempty"`

	// UrlUI The URL of the report in DoiT Cloud Navigator.
	UrlUI *string `json:"urlUI,omitempty"`
}

// ReportType defines model for Report.Type.
type ReportType string

// ReportList defines model for ReportList.
type ReportList struct {
	// PageToken Page token. It is used to request a specific page of the list results.
	PageToken *string   `json:"pageToken,omitempty"`
	Reports   *[]Report `json:"reports,omitempty"`

	// RowCount The number of returned records.
	RowCount *int64 `json:"rowCount,omitempty"`
}

// ResourcePermission defines model for ResourcePermission.
type ResourcePermission struct {
	// Role The role assigned to the user, defining their level of access to the resource.
	Role *ResourcePermissionRole `json:"role,omitempty"`

	// User The email address of the user to whom the role is assigned.
	User *string `json:"user,omitempty"`
}

// ResourcePermissionRole The role assigned to the user, defining their level of access to the resource.
type ResourcePermissionRole string

// ResourcePermissionsResponse defines model for ResourcePermissionsResponse.
type ResourcePermissionsResponse struct {
	// CreateTime The time when this resource was created, in milliseconds since the epoch.
	CreateTime *int64 `json:"createTime,omitempty"`

	// Description Resource description.
	Description *string `json:"description,omitempty"`

	// Id Resource id.
	Id *string `json:"id,omitempty"`

	// Name Resource name.
	Name        *string               `json:"name,omitempty"`
	Permissions *[]ResourcePermission `json:"permissions,omitempty"`

	// Public Type of permissions users in the entire organization have for this resource
	Public *ResourcePermissionsResponsePublic `json:"public"`

	// UpdateTime The time when this resource was last updated, in milliseconds since the epoch.
	UpdateTime *int64 `json:"updateTime,omitempty"`
}

// ResourcePermissionsResponsePublic Type of permissions users in the entire organization have for this resource
type ResourcePermissionsResponsePublic string

// ResourceReference defines model for ResourceReference.
type ResourceReference struct {
	// Id Resource identifier
	Id *string `json:"id,omitempty"`

	// Name Resource name
	Name *string `json:"name,omitempty"`

	// Owner Resource owner (only present if requester doesn't have access)
	Owner *string `json:"owner,omitempty"`
}

// Role defines model for Role.
type Role struct {
	// Customer The customer ID if this is a custom role
	Customer *string `json:"customer,omitempty"`

	// Id The unique ID of the role
	Id *string `json:"id,omitempty"`

	// Name The name of the role
	Name *string `json:"name,omitempty"`

	// Permissions List of permission IDs assigned to the role
	Permissions *[]string `json:"permissions,omitempty"`

	// Type The type of the role (preset or custom)
	Type *string `json:"type,omitempty"`
}

// RunReportResult defines model for RunReportResult.
type RunReportResult struct {
	Result *struct {
		// CacheHit If set to true, results were fetched from the cache.
		CacheHit     *bool                              `json:"cacheHit,omitempty"`
		ForecastRows *[][]Value                         `json:"forecastRows,omitempty"`
		MlFeatures   *[]RunReportResultResultMlFeatures `json:"mlFeatures,omitempty"`
		Rows         *[][]Value                         `json:"rows,omitempty"`
		Schema       *[]SchemaField                     `json:"schema,omitempty"`
	} `json:"result,omitempty"`
}

// RunReportResultResultMlFeatures defines model for RunReportResult.Result.MlFeatures.
type RunReportResultResultMlFeatures string

// SchemaField defines model for SchemaField.
type SchemaField struct {
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
}

// Scope defines model for Scope.
type Scope struct {
	IncludeNull *bool `json:"include_null,omitempty"`

	// InverseSelection If set to true, all the selected values will be excluded.
	InverseSelection *bool           `json:"inverse_selection,omitempty"`
	Key              string          `json:"key"`
	Regexp           *string         `json:"regexp,omitempty"`
	Type             DimensionsTypes `json:"type"`
	Values           *[]string       `json:"values,omitempty"`
}

// Seats defines model for Seats.
type Seats struct {
	LicensedNumberOfSeats *int64 `json:"licensedNumberOfSeats,omitempty"`
	MaximumNumberOfSeats  *int64 `json:"maximumNumberOfSeats,omitempty"`
	NumberOfSeats         *int64 `json:"numberOfSeats,omitempty"`
}

// SingleAllocation defines model for SingleAllocation.
type SingleAllocation struct {
	// AllocationType Type of allocation (single)
	AllocationType *SingleAllocationAllocationType `json:"allocationType,omitempty"`

	// AnomalyDetection Whether anomaly detection is enabled for this allocation
	AnomalyDetection *bool `json:"anomalyDetection,omitempty"`

	// CreateTime The time when the allocation was created (in UNIX timestamp).
	CreateTime *int64 `json:"createTime,omitempty"`

	// Description Allocation description
	Description *string `json:"description,omitempty"`

	// Id Allocation ID
	Id *string `json:"id,omitempty"`

	// Name Allocation name
	Name *string         `json:"name,omitempty"`
	Rule *AllocationRule `json:"rule,omitempty"`

	// Type Type of allocation (preset or custom)
	Type *string `json:"type,omitempty"`

	// UpdateTime Last time the allocation was modified (in UNIX timestamp).
	UpdateTime *int64 `json:"updateTime,omitempty"`
}

// SingleAllocationAllocationType Type of allocation (single)
type SingleAllocationAllocationType string

// SingleAllocationRequest defines model for SingleAllocationRequest.
type SingleAllocationRequest struct {
	// Description Allocation description
	Description *string `json:"description,omitempty"`

	// Name Allocation name
	Name string         `json:"name"`
	Rule AllocationRule `json:"rule"`
}

// SlackChannel defines model for SlackChannel.
type SlackChannel struct {
	CustomerId *string `json:"customerId,omitempty"`
	Id         *string `json:"id,omitempty"`
	Name       *string `json:"name,omitempty"`
	Shared     *bool   `json:"shared,omitempty"`
	Type       *string `json:"type,omitempty"`
	Workspace  *string `json:"workspace,omitempty"`
}

// SortableItem defines model for SortableItem.
type SortableItem struct {
	GetID *string `json:"GetID,omitempty"`
}

// Subscription defines model for Subscription.
type Subscription struct {
	BillingMethod   *string           `json:"billingMethod,omitempty"`
	CreationTime    *int64            `json:"creationTime,omitempty"`
	Id              *string           `json:"id,omitempty"`
	Plan            *SubscriptionPlan `json:"plan,omitempty"`
	PurchaseOrderID *string           `json:"purchaseOrderID,omitempty"`
	RenewalSettings *RenewalSettings  `json:"renewalSettings,omitempty"`
	ResourceUIURL   *string           `json:"resourceUIURL,omitempty"`
	Seats           *Seats            `json:"seats,omitempty"`
	SkuID           *string           `json:"skuID,omitempty"`
	SkuName         *string           `json:"skuName,omitempty"`
	Status          *string           `json:"status,omitempty"`
}

// SubscriptionPlan defines model for SubscriptionPlan.
type SubscriptionPlan struct {
	CommitmentInterval *SubscriptionPlanCommitmentInterval `json:"commitmentInterval,omitempty"`
	IsCommitmentPlan   *bool                               `json:"isCommitmentPlan,omitempty"`
	PlanName           *string                             `json:"planName,omitempty"`
}

// SubscriptionPlanCommitmentInterval defines model for SubscriptionPlanCommitmentInterval.
type SubscriptionPlanCommitmentInterval struct {
	EndTime   *int64 `json:"endTime,omitempty"`
	StartTime *int64 `json:"startTime,omitempty"`
}

// TicketCreateFormExtAPI defines model for TicketCreateFormExtAPI.
type TicketCreateFormExtAPI struct {
	Ticket TicketExtAPI `json:"ticket"`
}

// TicketExtAPI defines model for TicketExtAPI.
type TicketExtAPI struct {
	// Body The body of the ticket (can include html formatting)
	Body string `json:"body"`

	// Created Ticket create time
	Created *string `json:"created,omitempty"`

	// Platform Platform of the ticket
	Platform TicketExtAPIPlatform `json:"platform"`

	// Product Ticket product details
	Product string `json:"product"`

	// Severity Ticket severity
	Severity TicketExtAPISeverity `json:"severity"`

	// Subject The subject of the ticket.
	Subject string `json:"subject"`
}

// TicketExtAPIPlatform Platform of the ticket
type TicketExtAPIPlatform string

// TicketExtAPISeverity Ticket severity
type TicketExtAPISeverity string

// TicketListItem defines model for TicketListItem.
type TicketListItem struct {
	// CreateTime The time when this ticket was created, in milliseconds since the epoch.
	CreateTime *int64 `json:"createTime,omitempty"`

	// Id ticket id, identifying the report (e.g. "33234")
	Id *int64 `json:"id,omitempty"`

	// IsPublic is ticket public
	IsPublic *bool `json:"is_public,omitempty"`

	// Platform platform of the ticket
	Platform *TicketListItemPlatform `json:"platform,omitempty"`

	// Product Ticket product
	Product *string `json:"product,omitempty"`

	// Requester The ticket requester in a form of user@domain.com
	Requester *string `json:"requester,omitempty"`

	// Severity Ticket severity
	Severity *string `json:"severity,omitempty"`

	// Status Ticket status
	Status *string `json:"status,omitempty"`

	// Subject The subject of the ticket.
	Subject *string `json:"subject,omitempty"`

	// UpdateTime The time when this ticket was last updated, in milliseconds since the epoch.
	UpdateTime *int64 `json:"updateTime,omitempty"`

	// UrlUI Link to the report document in Cloud Management Platform
	UrlUI *string `json:"urlUI,omitempty"`
}

// TicketListItemPlatform platform of the ticket
type TicketListItemPlatform string

// TicketResponseExtAPI defines model for TicketResponseExtAPI.
type TicketResponseExtAPI struct {
	// Created ticket created time
	Created *int64 `json:"created,omitempty"`

	// Id ID
	Id *int64 `json:"id,omitempty"`

	// Platform ticket platform
	Platform *TicketResponseExtAPIPlatform `json:"platform,omitempty"`

	// Product ticket product
	Product *string `json:"product,omitempty"`

	// Requester ticket platform
	Requester *TicketResponseExtAPIRequester `json:"requester,omitempty"`

	// Severity update Severity field
	Severity *TicketResponseExtAPISeverity `json:"severity,omitempty"`

	// Status ticket status
	Status *string `json:"status,omitempty"`

	// Subject ticket subject
	Subject *string `json:"subject,omitempty"`

	// UrlUI ticket URL
	UrlUI *string `json:"urlUI,omitempty"`
}

// TicketResponseExtAPIPlatform ticket platform
type TicketResponseExtAPIPlatform string

// TicketResponseExtAPIRequester ticket platform
type TicketResponseExtAPIRequester string

// TicketResponseExtAPISeverity update Severity field
type TicketResponseExtAPISeverity string

// TicketsList defines model for TicketsList.
type TicketsList struct {
	// PageToken Page token, returned by a previous call, to request the next page of results
	PageToken *string `json:"pageToken,omitempty"`

	// RowCount Tickets rows count
	RowCount *int64            `json:"rowCount,omitempty"`
	Tickets  *[]TicketListItem `json:"tickets,omitempty"`
}

// TimeSettings Specify a predefined or custom time range for the report.
// For example, to specify a custom time range of "last 2 days", set the mode to `last`, the amount to `2`, and the unit to `day`. If `includeCurrent` is `true`, the range will be yesterday and today; otherwise, the range will be yesterday and the day before yesterday.
// If "custom" type is specified, you need to provide a custom time range in the `customTimeRange` field.
type TimeSettings struct {
	Amount         *int64            `json:"amount,omitempty"`
	IncludeCurrent *bool             `json:"includeCurrent,omitempty"`
	Mode           *TimeSettingsMode `json:"mode,omitempty"`
	Unit           *TimeSettingsUnit `json:"unit,omitempty"`
}

// TimeSettingsMode defines model for TimeSettings.Mode.
type TimeSettingsMode string

// TimeSettingsUnit defines model for TimeSettings.Unit.
type TimeSettingsUnit string

// UpdateUserRequest defines model for UpdateUserRequest.
type UpdateUserRequest struct {
	// FirstName The user's first name
	FirstName *string `json:"firstName,omitempty"`

	// JobFunction The user's job function
	JobFunction *UpdateUserRequestJobFunction `json:"jobFunction,omitempty"`

	// Language The user's preferred language
	Language *UpdateUserRequestLanguage `json:"language,omitempty"`

	// LastName The user's last name
	LastName *string `json:"lastName,omitempty"`

	// Phone The user's country code (e.g., +44)
	Phone *string `json:"phone,omitempty"`

	// PhoneExtension The user's phone extension (8-15 digits)
	PhoneExtension *string `json:"phoneExtension,omitempty"`

	// RoleId The id of the role to assign to the user
	RoleId *string `json:"roleId,omitempty"`
}

// UpdateUserRequestJobFunction The user's job function
type UpdateUserRequestJobFunction string

// UpdateUserRequestLanguage The user's preferred language
type UpdateUserRequestLanguage string

// UpdateUserResponse defines model for UpdateUserResponse.
type UpdateUserResponse struct {
	// Message Success message
	Message *string          `json:"message,omitempty"`
	User    *UpdatedUserBody `json:"user,omitempty"`
}

// UpdatedUserBody defines model for UpdatedUserBody.
type UpdatedUserBody struct {
	// DisplayName The user's display name
	DisplayName *string `json:"displayName,omitempty"`

	// Email The user's email address
	Email *string `json:"email,omitempty"`

	// FirstName The user's first name
	FirstName *string `json:"firstName,omitempty"`

	// Id The unique id of the user
	Id *string `json:"id,omitempty"`

	// JobFunction The user's job function
	JobFunction *UpdatedUserBodyJobFunction `json:"jobFunction,omitempty"`

	// Language The user's preferred language
	Language *UpdatedUserBodyLanguage `json:"language,omitempty"`

	// LastName The user's last name
	LastName *string `json:"lastName,omitempty"`

	// OrganizationId The id of the user's organization
	OrganizationId *string `json:"organizationId,omitempty"`

	// Phone The user's country code (e.g., +44)
	Phone *string `json:"phone,omitempty"`

	// PhoneExtension The user's phone extension
	PhoneExtension *string `json:"phoneExtension,omitempty"`

	// RoleId The id of the user's role
	RoleId *string `json:"roleId,omitempty"`
}

// UpdatedUserBodyJobFunction The user's job function
type UpdatedUserBodyJobFunction string

// UpdatedUserBodyLanguage The user's preferred language
type UpdatedUserBodyLanguage string

// UserListItem defines model for UserListItem.
type UserListItem struct {
	// DisplayName The user's display name
	DisplayName *string `json:"displayName,omitempty"`

	// Email The email address of the user
	Email *string `json:"email,omitempty"`

	// FirstName The user's first name
	FirstName *string `json:"firstName,omitempty"`

	// Id The unique id of the user
	Id *string `json:"id,omitempty"`

	// JobFunction The user's job function
	JobFunction *UserListItemJobFunction `json:"jobFunction,omitempty"`

	// Language The user's preferred language
	Language *UserListItemLanguage `json:"language,omitempty"`

	// LastName The user's last name
	LastName *string `json:"lastName,omitempty"`

	// OrganizationId The id of the user's organization
	OrganizationId *string `json:"organizationId,omitempty"`

	// Phone The user's country code (e.g., +44)
	Phone *string `json:"phone,omitempty"`

	// PhoneExtension The user's phone extension
	PhoneExtension *string `json:"phoneExtension,omitempty"`

	// RoleId The id of the user's role
	RoleId *string `json:"roleId,omitempty"`

	// Status The status of the user (active or invited)
	Status *UserListItemStatus `json:"status,omitempty"`
}

// UserListItemJobFunction The user's job function
type UserListItemJobFunction string

// UserListItemLanguage The user's preferred language
type UserListItemLanguage string

// UserListItemStatus The status of the user (active or invited)
type UserListItemStatus string

// ValidateResponse defines model for ValidateResponse.
type ValidateResponse struct {
	Domain *string `json:"domain,omitempty"`
	Email  *string `json:"email,omitempty"`
}

// Value The content of a single cell from a BigQuery result.
type Value = map[string]interface{}

// MaxResults defines model for maxResults.
type MaxResults = string

// PageToken defines model for pageToken.
type PageToken = string

// ReportId defines model for reportId.
type ReportId = string

// ResourceId defines model for resourceId.
type ResourceId = string

// ResourceType defines model for resourceType.
type ResourceType string

// SortOrder defines model for sortOrder.
type SortOrder string

// N400 defines model for 400.
type N400 = Error

// N401 defines model for 401.
type N401 = Error

// N403 defines model for 403.
type N403 = Error

// N404 defines model for 404.
type N404 = Error

// N429 defines model for 429.
type N429 = Error

// N500 defines model for 500.
type N500 = Error

// ListAlertsParams defines parameters for ListAlerts.
type ListAlertsParams struct {
	// SortBy A field by which the results will be sorted.
	SortBy *ListAlertsParamsSortBy `form:"sortBy,omitempty" json:"sortBy,omitempty"`

	// SortOrder Sort order can be ascending or descending.
	SortOrder *ListAlertsParamsSortOrder `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// MaxResults The maximum number of results to return in a single page. Leverage the page tokens to iterate through the entire collection.
	MaxResults *MaxResults `form:"maxResults,omitempty" json:"maxResults,omitempty"`

	// PageToken Page token, returned by a previous call, to request the next page   of results
	PageToken *PageToken `form:"pageToken,omitempty" json:"pageToken,omitempty"`

	// Filter An expression for filtering the results. The syntax is `key:[<value>]`. Multiple filters can be connected using a pipe |. See [Filters](https://developer.doit.com/docs/filters).
	// Available filter keys: **owner**, **name**
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`
}

// ListAlertsParamsSortBy defines parameters for ListAlerts.
type ListAlertsParamsSortBy string

// ListAlertsParamsSortOrder defines parameters for ListAlerts.
type ListAlertsParamsSortOrder string

// ListAllocationsParams defines parameters for ListAllocations.
type ListAllocationsParams struct {
	// MaxResults The maximum number of results to return in a single page. Leverage the page tokens to iterate through the entire collection.
	MaxResults *MaxResults `form:"maxResults,omitempty" json:"maxResults,omitempty"`

	// PageToken Page token, returned by a previous call, to request the next page   of results
	PageToken *PageToken `form:"pageToken,omitempty" json:"pageToken,omitempty"`

	// Filter An expression for filtering the results.
	// Valid fields: **type**, **allocationType**, **owner**, **name**.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// SortBy A field by which the results will be sorted.
	SortBy *ListAllocationsParamsSortBy `form:"sortBy,omitempty" json:"sortBy,omitempty"`

	// SortOrder Sort order can be ascending or descending.
	SortOrder *ListAllocationsParamsSortOrder `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// ListAllocationsParamsSortBy defines parameters for ListAllocations.
type ListAllocationsParamsSortBy string

// ListAllocationsParamsSortOrder defines parameters for ListAllocations.
type ListAllocationsParamsSortOrder string

// ListAttributionGroupsParams defines parameters for ListAttributionGroups.
type ListAttributionGroupsParams struct {
	// MaxResults The maximum number of results to return in a single page. Leverage the page tokens to iterate through the entire collection.
	MaxResults *MaxResults `form:"maxResults,omitempty" json:"maxResults,omitempty"`

	// PageToken Page token, returned by a previous call, to request the next page   of results
	PageToken *PageToken `form:"pageToken,omitempty" json:"pageToken,omitempty"`

	// SortBy A field by which the results will be sorted.
	SortBy *ListAttributionGroupsParamsSortBy `form:"sortBy,omitempty" json:"sortBy,omitempty"`

	// SortOrder Sort order can be ascending or descending.
	SortOrder *ListAttributionGroupsParamsSortOrder `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// ListAttributionGroupsParamsSortBy defines parameters for ListAttributionGroups.
type ListAttributionGroupsParamsSortBy string

// ListAttributionGroupsParamsSortOrder defines parameters for ListAttributionGroups.
type ListAttributionGroupsParamsSortOrder string

// ListAttributionsParams defines parameters for ListAttributions.
type ListAttributionsParams struct {
	// MaxResults The maximum number of results to return in a single page. Leverage the page tokens to iterate through the entire collection.
	MaxResults *MaxResults `form:"maxResults,omitempty" json:"maxResults,omitempty"`

	// PageToken Page token, returned by a previous call, to request the next page   of results
	PageToken *PageToken `form:"pageToken,omitempty" json:"pageToken,omitempty"`

	// Filter An expression for filtering the results.
	// Valid fields: **type**, **owner**, **name**.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// SortBy The field by which the results are sorted.
	SortBy *ListAttributionsParamsSortBy `form:"sortBy,omitempty" json:"sortBy,omitempty"`

	// SortOrder Sort order can be ascending or descending.
	SortOrder *ListAttributionsParamsSortOrder `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// ListAttributionsParamsSortBy defines parameters for ListAttributions.
type ListAttributionsParamsSortBy string

// ListAttributionsParamsSortOrder defines parameters for ListAttributions.
type ListAttributionsParamsSortOrder string

// CreateAttributionJSONBody defines parameters for CreateAttribution.
type CreateAttributionJSONBody struct {
	// Components List of Attribution filters
	Components []AttributionComponent `json:"components"`

	// Description Description of the attribution
	Description *string `json:"description,omitempty"`

	// Formula Attribution formula (A is the first component, B is the second one, and so on.)
	Formula *string `json:"formula,omitempty"`

	// Name Name of the attribution
	Name string `json:"name"`
}

// UpdateAttributionJSONBody defines parameters for UpdateAttribution.
type UpdateAttributionJSONBody struct {
	// Components List of Attribution filters
	Components *[]AttributionComponent `json:"components,omitempty"`

	// Description Description of the attribution
	Description *string `json:"description,omitempty"`

	// Formula Attribution formula (A is the first component, B is the second one, C is the third, and so on.)
	Formula *string `json:"formula,omitempty"`

	// Name Attribution Name
	Name *string `json:"name,omitempty"`
}

// ListBudgetsParams defines parameters for ListBudgets.
type ListBudgetsParams struct {
	// MaxResults The maximum number of results to return in a single page. Leverage the page tokens to iterate through the entire collection.
	MaxResults *string `form:"maxResults,omitempty" json:"maxResults,omitempty"`

	// PageToken Page token, returned by a previous call, to request the next page   of results
	PageToken *PageToken `form:"pageToken,omitempty" json:"pageToken,omitempty"`

	// Filter An expression for filtering the results of the request. The syntax is "key:[<value>]".
	// Available keys: owner, lastModified in ms (>lasModified). Multiple filters can be connected using a pipe |. Note that using different keys in the same filter results in "AND," while using the same key multiple times in the same filter results in "OR".
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// MinCreationTime Min value for reports creation time, in milliseconds since the POSIX epoch. If set, only reports created after or at this timestamp are returned.
	MinCreationTime *string `form:"minCreationTime,omitempty" json:"minCreationTime,omitempty"`

	// MaxCreationTime Max value for reports creation time, in milliseconds since the POSIX epoch. If set, only reports created before or at this timestamp are returned.
	MaxCreationTime *string `form:"maxCreationTime,omitempty" json:"maxCreationTime,omitempty"`
}

// GetDimensionsParams defines parameters for GetDimensions.
type GetDimensionsParams struct {
	// Type Dimension type
	Type DimensionsTypes `form:"type" json:"type"`

	// Id Dimension id
	Id string `form:"id" json:"id"`
}

// ListDimensionsParams defines parameters for ListDimensions.
type ListDimensionsParams struct {
	// MaxResults The maximum number of results to return in a single page. Leverage the page tokens to iterate through the entire collection.
	MaxResults *MaxResults `form:"maxResults,omitempty" json:"maxResults,omitempty"`

	// PageToken Page token, returned by a previous call, to request the next page   of results
	PageToken *PageToken `form:"pageToken,omitempty" json:"pageToken,omitempty"`

	// Filter An expression for filtering the results.
	// The fields eligible for filtering are: type, label, key.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// SortBy A field by which the results will be sorted.
	SortBy *ListDimensionsParamsSortBy `form:"sortBy,omitempty" json:"sortBy,omitempty"`

	// SortOrder Sort order can be ascending or descending.
	SortOrder *ListDimensionsParamsSortOrder `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// ListDimensionsParamsSortBy defines parameters for ListDimensions.
type ListDimensionsParamsSortBy string

// ListDimensionsParamsSortOrder defines parameters for ListDimensions.
type ListDimensionsParamsSortOrder string

// ListReportsParams defines parameters for ListReports.
type ListReportsParams struct {
	// MaxResults The maximum number of results to return in a single page. Leverage the page tokens to iterate through the entire collection.
	MaxResults *MaxResults `form:"maxResults,omitempty" json:"maxResults,omitempty"`

	// PageToken Page token, returned by a previous call, to request the next page   of results
	PageToken *PageToken `form:"pageToken,omitempty" json:"pageToken,omitempty"`

	// Filter An expression for filtering the results.
	// The syntax is `key:[<value>]`. Multiple filters can be connected using a pipe |. See [Filters](https://developer.doit.com/docs/filters).
	// Possible filter keys: **reportName**, **owner**, **type**, **updateTime**
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// MinCreationTime Min value for reports creation time, in milliseconds since the POSIX epoch. If set, only reports created after or at this timestamp are returned.
	MinCreationTime *string `form:"minCreationTime,omitempty" json:"minCreationTime,omitempty"`

	// MaxCreationTime Max value for reports creation time, in milliseconds since the POSIX epoch. If set, only reports created before or at this timestamp are returned.
	MaxCreationTime *string `form:"maxCreationTime,omitempty" json:"maxCreationTime,omitempty"`
}

// CreateReportJSONBody defines parameters for CreateReport.
type CreateReportJSONBody struct {
	// Config Report configuration
	Config *ExternalConfig `json:"config,omitempty"`

	// Description Report description.
	Description *string `json:"description,omitempty"`

	// Name Report name.
	Name *string `json:"name,omitempty"`
}

// QueryJSONBody defines parameters for Query.
type QueryJSONBody struct {
	// Config Report configuration
	Config *ExternalConfig `json:"config,omitempty"`
}

// GetReportParams defines parameters for GetReport.
type GetReportParams struct {
	// TimeRange An optional parameter to override the report time settings. Value should represented in the format P[n]Y[n]M[n]D[n]. In the representations, the [n] is replaced by the value for each of the date and time elements that follow the [n].
	TimeRange *string `form:"timeRange,omitempty" json:"timeRange,omitempty"`

	// StartDate An optional parameter to override the report time settings. Must be provided together with `endDate`. Format: yyyy-mm-dd
	StartDate *string `form:"startDate,omitempty" json:"startDate,omitempty"`

	// EndDate An optional parameter to override the report time settings. Must be provided together with `startDate`. Format: yyyy-mm-dd
	EndDate *string `form:"endDate,omitempty" json:"endDate,omitempty"`
}

// ListAnomaliesParams defines parameters for ListAnomalies.
type ListAnomaliesParams struct {
	// MinCreationTime Min value for the anomaly detection time
	MinCreationTime *string `form:"minCreationTime,omitempty" json:"minCreationTime,omitempty"`

	// MaxCreationTime Max value for the anomaly detection time
	MaxCreationTime *string `form:"maxCreationTime,omitempty" json:"maxCreationTime,omitempty"`

	// Filter An expression for filtering the results of the request
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// MaxResults The maximum number of results to return in a single page
	MaxResults *int64 `form:"maxResults,omitempty" json:"maxResults,omitempty"`

	// PageToken Page token, returned by a previous call, to request the next page   of results
	PageToken *PageToken `form:"pageToken,omitempty" json:"pageToken,omitempty"`
}

// IdOfAssetsParams defines parameters for IdOfAssets.
type IdOfAssetsParams struct {
	// MaxResults The maximum number of results to return in a single page. Leverage the page tokens to iterate through the entire collection.
	MaxResults *int64 `form:"maxResults,omitempty" json:"maxResults,omitempty"`

	// PageToken Page token, returned by a previous call, to request the next page   of results
	PageToken *PageToken `form:"pageToken,omitempty" json:"pageToken,omitempty"`

	// Filter An expression for filtering the results of the request. The syntax
	// is `key:[<value>]`. e.g: "type:g-suite". Multiple filters can be
	// connected using a pipe |. Note that using different keys in the same
	// filter results in “AND,” while using the same key multiple times in
	// the same filter results in “OR”.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`
}

// IdOfAssetJSONBody defines parameters for IdOfAsset.
type IdOfAssetJSONBody struct {
	Quantity *int64 `json:"quantity,omitempty"`
}

// CreateAssetParams defines parameters for CreateAsset.
type CreateAssetParams struct {
	// Type Asset type. For example, amazon-web-services
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// Mode Asset mode.
	Mode *string `form:"mode,omitempty" json:"mode,omitempty"`

	// AccountName The desired name of the account.
	AccountName *string `form:"accountName,omitempty" json:"accountName,omitempty"`

	// RootEmail The root account email.
	RootEmail *string `form:"rootEmail,omitempty" json:"rootEmail,omitempty"`
}

// ListInvoicesParams defines parameters for ListInvoices.
type ListInvoicesParams struct {
	// MaxResults The maximum number of results to return in a single page. Leverage the page tokens to iterate through the entire collection.
	MaxResults *int64 `form:"maxResults,omitempty" json:"maxResults,omitempty"`

	// PageToken Page token, returned by a previous call, to request the next page   of results
	PageToken *PageToken `form:"pageToken,omitempty" json:"pageToken,omitempty"`
	Filter    *Filter    `form:"filter,omitempty" json:"filter,omitempty"`

	// MinCreationTime Min value for the invoice creation time, in milliseconds since the POSIX epoch. If set, only invoices created after or at this timestamp are returned.
	MinCreationTime *int64 `form:"minCreationTime,omitempty" json:"minCreationTime,omitempty"`

	// MaxCreationTime Max value for the invoice creation time, in milliseconds since the POSIX epoch. If set, only invoices created before or at this timestamp are returned.
	MaxCreationTime *int64 `form:"maxCreationTime,omitempty" json:"maxCreationTime,omitempty"`
}

// ListKnownIssuesParams defines parameters for ListKnownIssues.
type ListKnownIssuesParams struct {
	// MaxResults The maximum number of results to return in a single page. Leverage the page tokens to iterate through the entire collection.
	MaxResults *int64 `form:"maxResults,omitempty" json:"maxResults,omitempty"`

	// PageToken Page token, returned by a previous call, to request the next page   of results
	PageToken *PageToken `form:"pageToken,omitempty" json:"pageToken,omitempty"`

	// Filter An expression for filtering the results. The syntax is `key:[<value>]`. Multiple filters can be connected using a pipe |. See [Filters](https://developer.doit.com/docs/filters).
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// MinCreationTime Min value for the cloud incident creation time, in milliseconds since the POSIX epoch. If set, only cloud incidents created after or at this timestamp are returned.
	MinCreationTime *string `form:"minCreationTime,omitempty" json:"minCreationTime,omitempty"`

	// MaxCreationTime Max value for the cloud incident creation time, in milliseconds since the POSIX epoch. If set, only cloud incidents created before or at this
	// timestamp are returned.
	MaxCreationTime *string `form:"maxCreationTime,omitempty" json:"maxCreationTime,omitempty"`
}

// DatahubEventsCSVFileMultipartBody defines parameters for DatahubEventsCSVFile.
type DatahubEventsCSVFileMultipartBody struct {
	// File The CSV file to upload, either uncompressed or compressed in ZIP or GZ format. The maximum file size is 30 MB.
	File *openapi_types.File `json:"file,omitempty"`

	// Provider The identifier of the data provider. Allowed characters: alphanumeric (0-9,a-z,A-Z), underscore (_), space, dash (-).
	Provider *string `json:"provider,omitempty"`
}

// DatahubEventsJSONBody defines parameters for DatahubEvents.
type DatahubEventsJSONBody struct {
	Events *[]struct {
		Dimensions *[]struct {
			// Key If the type is `fixed`, the key must be a valid fixed value. See the [DataHub API Guide](https://developer.doit.com/docs/datahub-api) for more information.
			Key *string `json:"key,omitempty"`

			// Type The dimension type.
			Type  *DatahubEventsJSONBodyEventsDimensionsType     `json:"type,omitempty"`
			Value *DatahubEventsJSONBody_Events_Dimensions_Value `json:"value,omitempty"`
		} `json:"dimensions,omitempty"`

		// Id The event id. Must be unique within the dataset. If not set, a UUIDv4 will be generated at ingestion time.
		Id      *string `json:"id,omitempty"`
		Metrics *[]struct {
			// Type The type of the metric. If you choose "cost" or "usage", it will map to the basic "Cost" or "Usage" metric in Cloud Analytics reports. You can also use this field to define custom metric types, such as "working_hours", "ride", etc.
			Type *string `json:"type,omitempty"`

			// Value The value of the metric.
			Value *float64 `json:"value,omitempty"`
		} `json:"metrics,omitempty"`

		// Provider The identifier of the data provider. Allowed characters: alphanumeric (0-9,a-z,A-Z), underscore (_), space, dash (-).
		Provider string `json:"provider"`

		// Time The timestamp of the event in RFC3339 format.
		Time time.Time `json:"time"`
	} `json:"events,omitempty"`
}

// DatahubEventsJSONBodyEventsDimensionsType defines parameters for DatahubEvents.
type DatahubEventsJSONBodyEventsDimensionsType string

// DatahubEventsJSONBodyEventsDimensionsValue0 defines parameters for DatahubEvents.
type DatahubEventsJSONBodyEventsDimensionsValue0 = string

// DatahubEventsJSONBodyEventsDimensionsValue1 defines parameters for DatahubEvents.
type DatahubEventsJSONBodyEventsDimensionsValue1 = bool

// DatahubEventsJSONBody_Events_Dimensions_Value defines parameters for DatahubEvents.
type DatahubEventsJSONBody_Events_Dimensions_Value struct {
	union json.RawMessage
}

// DeleteDatahubEventsByFilterJSONBody defines parameters for DeleteDatahubEventsByFilter.
type DeleteDatahubEventsByFilterJSONBody struct {
	EventIds  *[]string `json:"eventIds,omitempty"`
	Providers *[]string `json:"providers,omitempty"`
}

// GetResourcePermissionParamsResourceType defines parameters for GetResourcePermission.
type GetResourcePermissionParamsResourceType string

// UpdateResourcePermissionJSONBody defines parameters for UpdateResourcePermission.
type UpdateResourcePermissionJSONBody struct {
	Permissions *[]ResourcePermission `json:"permissions,omitempty"`

	// Public The type of permissions granted to all users in the organization for this resource.
	Public *UpdateResourcePermissionJSONBodyPublic `json:"public"`
}

// UpdateResourcePermissionParamsResourceType defines parameters for UpdateResourcePermission.
type UpdateResourcePermissionParamsResourceType string

// UpdateResourcePermissionJSONBodyPublic defines parameters for UpdateResourcePermission.
type UpdateResourcePermissionJSONBodyPublic string

// ListProductsParams defines parameters for ListProducts.
type ListProductsParams struct {
	Platform *string `form:"platform,omitempty" json:"platform,omitempty"`
}

// IdOfTicketsParams defines parameters for IdOfTickets.
type IdOfTicketsParams struct {
	// MaxResults The maximum number of results to return in a single page. Leverage the page tokens to iterate through the entire collection.
	MaxResults *int64 `form:"maxResults,omitempty" json:"maxResults,omitempty"`

	// PageToken Page token, returned by a previous call, to request the next page   of results
	PageToken *PageToken `form:"pageToken,omitempty" json:"pageToken,omitempty"`

	// Filter An expression for filtering the results of the request. The syntax is `key:[<value>]`. e.g: "severity:normal". Multiple filters can be
	// connected using a pipe |. Note that using different keys in the same
	// filter results in “AND,” while using the same key multiple times in
	// the same filter results in “OR”.
	Filter *string `form:"filter,omitempty" json:"filter,omitempty"`

	// MinCreationTime Min value for tickets creation time, in milliseconds since the POSIX epoch. If set, only tickets created after or at this timestamp are returned.
	MinCreationTime *string `form:"minCreationTime,omitempty" json:"minCreationTime,omitempty"`

	// MaxCreationTime Max value for tickets creation time, in milliseconds since the POSIX epoch. If set, only tickets created before or at this timestamp are returned.
	MaxCreationTime *string `form:"maxCreationTime,omitempty" json:"maxCreationTime,omitempty"`
}

// CreateAlertJSONRequestBody defines body for CreateAlert for application/json ContentType.
type CreateAlertJSONRequestBody = AlertRequest

// UpdateAlertJSONRequestBody defines body for UpdateAlert for application/json ContentType.
type UpdateAlertJSONRequestBody = AlertUpdateRequest

// CreateAllocationJSONRequestBody defines body for CreateAllocation for application/json ContentType.
type CreateAllocationJSONRequestBody = SingleAllocationRequest

// UpdateAllocationJSONRequestBody defines body for UpdateAllocation for application/json ContentType.
type UpdateAllocationJSONRequestBody = SingleAllocationRequest

// CreateAttributionGroupJSONRequestBody defines body for CreateAttributionGroup for application/json ContentType.
type CreateAttributionGroupJSONRequestBody = AttributionGroupRequest

// UpdateAttributionGroupJSONRequestBody defines body for UpdateAttributionGroup for application/json ContentType.
type UpdateAttributionGroupJSONRequestBody = AttributionGroupUpdateRequest

// CreateAttributionJSONRequestBody defines body for CreateAttribution for application/json ContentType.
type CreateAttributionJSONRequestBody CreateAttributionJSONBody

// UpdateAttributionJSONRequestBody defines body for UpdateAttribution for application/json ContentType.
type UpdateAttributionJSONRequestBody UpdateAttributionJSONBody

// CreateBudgetJSONRequestBody defines body for CreateBudget for application/json ContentType.
type CreateBudgetJSONRequestBody = BudgetCreateUpdateRequest

// UpdateBudgetJSONRequestBody defines body for UpdateBudget for application/json ContentType.
type UpdateBudgetJSONRequestBody = BudgetCreateUpdateRequest

// CreateReportJSONRequestBody defines body for CreateReport for application/json ContentType.
type CreateReportJSONRequestBody CreateReportJSONBody

// QueryJSONRequestBody defines body for Query for application/json ContentType.
type QueryJSONRequestBody QueryJSONBody

// UpdateReportJSONRequestBody defines body for UpdateReport for application/json ContentType.
type UpdateReportJSONRequestBody = ExternalUpdateReport

// IdOfAssetJSONRequestBody defines body for IdOfAsset for application/json ContentType.
type IdOfAssetJSONRequestBody IdOfAssetJSONBody

// DatahubEventsCSVFileMultipartRequestBody defines body for DatahubEventsCSVFile for multipart/form-data ContentType.
type DatahubEventsCSVFileMultipartRequestBody DatahubEventsCSVFileMultipartBody

// DatahubEventsJSONRequestBody defines body for DatahubEvents for application/json ContentType.
type DatahubEventsJSONRequestBody DatahubEventsJSONBody

// DeleteDatahubEventsByFilterJSONRequestBody defines body for DeleteDatahubEventsByFilter for application/json ContentType.
type DeleteDatahubEventsByFilterJSONRequestBody DeleteDatahubEventsByFilterJSONBody

// InviteUserJSONRequestBody defines body for InviteUser for application/json ContentType.
type InviteUserJSONRequestBody = InviteUserRequest

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = UpdateUserRequest

// UpdateResourcePermissionJSONRequestBody defines body for UpdateResourcePermission for application/json ContentType.
type UpdateResourcePermissionJSONRequestBody UpdateResourcePermissionJSONBody

// IdOfTicketsPostJSONRequestBody defines body for IdOfTicketsPost for application/json ContentType.
type IdOfTicketsPostJSONRequestBody = TicketCreateFormExtAPI
